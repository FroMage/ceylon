# Classes.ceylon

(TYPE_DECL 
  (CLASS_DECL 
    (TYPE_NAME Classes) 
    (STMT_LIST 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME Simple) STMT_LIST)) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithMethods) 
          (STMT_LIST 
            (METHOD_DECL 
              (MEMBER_TYPE void) 
              (MEMBER_NAME doNothing) ARG_LIST STMT_LIST) 
            (METHOD_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME Natural))) 
              (MEMBER_NAME returnZero) ARG_LIST 
              (STMT_LIST 
                (RET_STMT 
                  (EXPR 
                    (INT_CST 0))))) 
            (METHOD_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME String))) 
              (MEMBER_NAME returnArgument) 
              (ARG_LIST 
                (FORMAL_PARAMETER 
                  (TYPE 
                    (TYPE_NAME String)) 
                  (MEMBER_NAME arg))) 
              (STMT_LIST 
                (RET_STMT 
                  (EXPR 
                    (MEMBER_NAME arg)))))))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithAttributes) 
          (STMT_LIST 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME Natural))) 
              (MEMBER_NAME count) 
              (EXPR 
                (INT_CST 0))) 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME String))) 
              (MEMBER_NAME description) 
              (INIT_EXPR 
                (EXPR 
                  (STRING_CST ""))) 
              (ANNOTATION_LIST 
                (DECL_MODIFIER mutable))) 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME String))) 
              (MEMBER_NAME countAsString) 
              (STMT_LIST 
                (RET_STMT 
                  (EXPR 
                    (PREFIX_EXPR $ 
                      (MEMBER_NAME count)))))) 
            (MEMBER_DECL 
              (ATTRIBUTE_SETTER 
                (MEMBER_NAME countAsString)) 
              (STMT_LIST 
                (EXPR 
                  (:= 
                    (MEMBER_NAME count) 
                    (EXPR 
                      (EXPR 
                        (MEMBER_NAME countAsString) . 
                        (MEMBER_NAME parseNatural)))))))))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithAbstractMethods) 
          (STMT_LIST 
            (METHOD_DECL 
              (MEMBER_TYPE void) 
              (MEMBER_NAME doNothing) ARG_LIST ;) 
            (METHOD_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME Natural))) 
              (MEMBER_NAME returnZero) ARG_LIST ;) 
            (METHOD_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME String))) 
              (MEMBER_NAME returnArgument) 
              (ARG_LIST 
                (FORMAL_PARAMETER 
                  (TYPE 
                    (TYPE_NAME String)) 
                  (MEMBER_NAME arg))) ;))) 
        (ANNOTATION_LIST 
          (DECL_MODIFIER abstract))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithAbstractAttributes) 
          (STMT_LIST 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME Natural))) 
              (MEMBER_NAME count) ;) 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME String))) 
              (MEMBER_NAME description) ; 
              (ANNOTATION_LIST 
                (DECL_MODIFIER mutable))))) 
        (ANNOTATION_LIST 
          (DECL_MODIFIER abstract))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithInitParameters) 
          (ARG_LIST 
            (FORMAL_PARAMETER 
              (TYPE 
                (TYPE_NAME Natural)) 
              (MEMBER_NAME count)) 
            (FORMAL_PARAMETER 
              (TYPE 
                (TYPE_NAME String)) 
              (MEMBER_NAME description))) 
          (STMT_LIST 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME Natural))) 
              (MEMBER_NAME count) 
              (EXPR 
                (MEMBER_NAME count))) 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME String))) 
              (MEMBER_NAME description) 
              (INIT_EXPR 
                (EXPR 
                  (MEMBER_NAME description))) 
              (ANNOTATION_LIST 
                (DECL_MODIFIER mutable)))))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithAnnotations) STMT_LIST) 
        (ANNOTATION_LIST 
          (USER_ANNOTATION 
            (ANNOTATION_NAME doc) 
            (STRING_CST "This class has annotations. Remember that literal
	     strings can be spread across multiple lines.")) 
          (USER_ANNOTATION 
            (ANNOTATION_NAME by) 
            (STRING_CST "Gavin King") 
            (STRING_CST "Andrew Haley")) 
          (USER_ANNOTATION 
            (ANNOTATION_NAME scope) 
            (ARG_LIST 
              (EXPR 
                (MEMBER_NAME session)))) 
          (USER_ANNOTATION 
            (ANNOTATION_NAME see) 
            (REFLECTED_LITERAL 
              (TYPE 
                (TYPE_NAME Simple)))) 
          (USER_ANNOTATION 
            (ANNOTATION_NAME throws) 
            (REFLECTED_LITERAL 
              (TYPE 
                (TYPE_NAME DatabaseException))) 
            (STRING_CST "if database access fails")) 
          (USER_ANNOTATION 
            (ANNOTATION_NAME entity)) 
          (USER_ANNOTATION 
            (ANNOTATION_NAME table) 
            (ARG_LIST 
              (NAMED_ARG 
                (ARG_NAME name) 
                (EXPR 
                  (STRING_CST "someTable"))) 
              (NAMED_ARG 
                (ARG_NAME schema) 
                (EXPR 
                  (STRING_CST "someSchema"))))))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME Extends) 
          (SUPERCLASS 
            (TYPE 
              (TYPE_NAME Simple))) STMT_LIST)) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME ExtendsWithInitParameters) 
          (ARG_LIST 
            (FORMAL_PARAMETER 
              (TYPE 
                (TYPE_NAME Natural)) 
              (MEMBER_NAME count)) 
            (FORMAL_PARAMETER 
              (TYPE 
                (TYPE_NAME String)) 
              (MEMBER_NAME description)) 
            (FORMAL_PARAMETER 
              (TYPE 
                (TYPE_NAME Float)) 
              (MEMBER_NAME tolerance))) 
          (SUPERCLASS 
            (TYPE 
              (TYPE_NAME WithInitParameters)) 
            (ARG_LIST 
              (EXPR 
                (MEMBER_NAME count)) 
              (EXPR 
                (MEMBER_NAME description)))) 
          (STMT_LIST 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME Float))) 
              (MEMBER_NAME tol) 
              (EXPR 
                (MEMBER_NAME tolerance)))))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithClosedInstanceList) 
          (INSTANCE_LIST 
            (INSTANCE 
              (MEMBER_NAME foo)) 
            (INSTANCE 
              (MEMBER_NAME bar)) 
            (INSTANCE 
              (MEMBER_NAME baz))) STMT_LIST)) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithOpenInstanceList) 
          (INSTANCE_LIST 
            (INSTANCE 
              (MEMBER_NAME foo)) 
            (INSTANCE 
              (MEMBER_NAME bar)) 
            (INSTANCE 
              (MEMBER_NAME baz))) STMT_LIST)) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithInstanceListAndInitParameter) 
          (ARG_LIST 
            (FORMAL_PARAMETER 
              (TYPE 
                (TYPE_NAME Integer)) 
              (MEMBER_NAME i))) 
          (INSTANCE_LIST 
            (INSTANCE 
              (MEMBER_NAME one) 
              (ARG_LIST 
                (EXPR 
                  (INT_CST 1)))) 
            (INSTANCE 
              (MEMBER_NAME two) 
              (ARG_LIST 
                (EXPR 
                  (INT_CST 2)))) 
            (INSTANCE 
              (MEMBER_NAME three) 
              (ARG_LIST 
                (EXPR 
                  (INT_CST 3))))) 
          (STMT_LIST 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME Integer))) 
              (MEMBER_NAME value) 
              (EXPR 
                (MEMBER_NAME i)))))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithInstanceListAndFunctionalInitParameter) 
          (ARG_LIST 
            (FORMAL_PARAMETER 
              (TYPE 
                (TYPE_NAME String)) 
              (MEMBER_NAME name) ARG_LIST)) 
          (INSTANCE_LIST 
            (INSTANCE 
              (MEMBER_NAME foo) 
              (ARG_LIST 
                (NAMED_ARG 
                  (ARG_NAME name) ARG_LIST 
                  (STMT_LIST 
                    (RET_STMT 
                      (EXPR 
                        (STRING_CST "Foo"))))))) 
            (INSTANCE 
              (MEMBER_NAME bar) 
              (ARG_LIST 
                (NAMED_ARG 
                  (ARG_NAME name) ARG_LIST 
                  (STMT_LIST 
                    (RET_STMT 
                      (EXPR 
                        (STRING_CST "Bar"))))))) 
            (INSTANCE 
              (MEMBER_NAME baz) 
              (ARG_LIST 
                (NAMED_ARG 
                  (ARG_NAME name) ARG_LIST 
                  (STMT_LIST 
                    (RET_STMT 
                      (EXPR 
                        (STRING_CST "Baz")))))))) 
          (STMT_LIST 
            (METHOD_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME String))) 
              (MEMBER_NAME name) ARG_LIST 
              (EXPR 
                (MEMBER_NAME name)))))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithAnnotatedInstanceList) 
          (ARG_LIST 
            (FORMAL_PARAMETER 
              (TYPE 
                (TYPE_NAME Integer)) 
              (MEMBER_NAME i))) 
          (INSTANCE_LIST 
            (INSTANCE 
              (ANNOTATION_LIST 
                (USER_ANNOTATION 
                  (ANNOTATION_NAME doc) 
                  (STRING_CST "1")) 
                (USER_ANNOTATION 
                  (ANNOTATION_NAME numericValue) 
                  (ARG_LIST 
                    (EXPR 
                      (INT_CST 1))))) 
              (MEMBER_NAME one) 
              (ARG_LIST 
                (EXPR 
                  (INT_CST 1)))) 
            (INSTANCE 
              (ANNOTATION_LIST 
                (USER_ANNOTATION 
                  (ANNOTATION_NAME doc) 
                  (STRING_CST "2")) 
                (USER_ANNOTATION 
                  (ANNOTATION_NAME numericValue) 
                  (ARG_LIST 
                    (EXPR 
                      (INT_CST 2))))) 
              (MEMBER_NAME two) 
              (ARG_LIST 
                (EXPR 
                  (INT_CST 2)))) 
            (INSTANCE 
              (ANNOTATION_LIST 
                (USER_ANNOTATION 
                  (ANNOTATION_NAME doc) 
                  (STRING_CST "3")) 
                (USER_ANNOTATION 
                  (ANNOTATION_NAME numericValue) 
                  (ARG_LIST 
                    (EXPR 
                      (INT_CST 3))))) 
              (MEMBER_NAME three) 
              (ARG_LIST 
                (EXPR 
                  (INT_CST 3))))) 
          (STMT_LIST 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME Integer))) 
              (MEMBER_NAME value) 
              (EXPR 
                (MEMBER_NAME i)))))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithTypeParameters) 
          (TYPE_PARAMETER_LIST 
            (TYPE_PARAMETER 
              (TYPE_NAME X)) 
            (TYPE_PARAMETER 
              (TYPE_NAME Y))) STMT_LIST)) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithTypeConstraints) 
          (TYPE_PARAMETER_LIST 
            (TYPE_PARAMETER 
              (TYPE_NAME X)) 
            (TYPE_PARAMETER 
              (TYPE_NAME Y))) 
          (TYPE_CONSTRAINT_LIST 
            (TYPE_CONSTRAINT 
              (>= 
                (TYPE_NAME X) 
                (TYPE 
                  (TYPE_NAME String)))) 
            (TYPE_CONSTRAINT 
              (TYPE_NAME Y) 
              (ARG_LIST 
                (FORMAL_PARAMETER 
                  (TYPE 
                    (TYPE_NAME Natural)) 
                  (MEMBER_NAME count))))) STMT_LIST)) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithNestedClass) 
          (STMT_LIST 
            (TYPE_DECL 
              (CLASS_DECL 
                (TYPE_NAME NestedClass) STMT_LIST))))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME WithNestedInterface) 
          (STMT_LIST 
            (TYPE_DECL 
              (INTERFACE_DECL 
                (TYPE_NAME NestedInterface)))))) 
      (TYPE_DECL 
        (INTERFACE_DECL 
          (TYPE_NAME Counter) 
          (MEMBER_DECL 
            (MEMBER_TYPE 
              (TYPE 
                (TYPE_NAME Natural))) 
            (MEMBER_NAME count) ; 
            (ANNOTATION_LIST 
              (DECL_MODIFIER public))) 
          (ABSTRACT_METHOD_DECL 
            (ANNOTATION_LIST 
              (DECL_MODIFIER public)) 
            (MEMBER_TYPE void) 
            (MEMBER_NAME inc) ARG_LIST)) 
        (ANNOTATION_LIST 
          (DECL_MODIFIER public))) 
      (TYPE_DECL 
        (INTERFACE_DECL 
          (TYPE_NAME Resettable) 
          (ABSTRACT_METHOD_DECL 
            (MEMBER_TYPE void) 
            (MEMBER_NAME reset) ARG_LIST)) 
        (ANNOTATION_LIST 
          (DECL_MODIFIER public))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME Satisfies) 
          (SATISFIES_LIST 
            (TYPE 
              (TYPE_NAME Counter))) 
          (STMT_LIST 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME Natural))) 
              (MEMBER_NAME count) 
              (INIT_EXPR 
                (EXPR 
                  (INT_CST 0))) 
              (ANNOTATION_LIST 
                (DECL_MODIFIER mutable))) 
            (METHOD_DECL 
              (MEMBER_TYPE void) 
              (MEMBER_NAME inc) ARG_LIST 
              (STMT_LIST 
                (EXPR 
                  (EXPR 
                    (MEMBER_NAME count) 
                    (POSTFIX_EXPR ++)))))))) 
      (TYPE_DECL 
        (CLASS_DECL 
          (TYPE_NAME SatisfiesMultiple) 
          (SATISFIES_LIST 
            (TYPE 
              (TYPE_NAME Counter)) 
            (TYPE 
              (TYPE_NAME Resettable))) 
          (STMT_LIST 
            (MEMBER_DECL 
              (MEMBER_TYPE 
                (TYPE 
                  (TYPE_NAME Natural))) 
              (MEMBER_NAME count) 
              (INIT_EXPR 
                (EXPR 
                  (INT_CST 0))) 
              (ANNOTATION_LIST 
                (DECL_MODIFIER mutable))) 
            (METHOD_DECL 
              (MEMBER_TYPE void) 
              (MEMBER_NAME inc) ARG_LIST 
              (STMT_LIST 
                (EXPR 
                  (EXPR 
                    (MEMBER_NAME count) 
                    (POSTFIX_EXPR ++))))) 
            (METHOD_DECL 
              (MEMBER_TYPE void) 
              (MEMBER_NAME reset) ARG_LIST 
              (STMT_LIST 
                (EXPR 
                  (:= 
                    (MEMBER_NAME count) 
                    (EXPR 
                      (INT_CST 0))))))))))))