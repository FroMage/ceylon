# Statements.ceylon

(TYPE_DECL
  (TYPE_DECL
    (CLASS_DECL
      (TYPE_NAME Statements) FORMAL_PARAMETER_LIST
      (BLOCK
        (MEMBER_DECL
          (MEMBER_TYPE
            (TYPE
              (TYPE_NAME String)))
          (MEMBER_NAME hello)
          (INIT_EXPR
            (EXPR
              (STRING_CST "Hello World"))))
        (MEMBER_DECL
          (MEMBER_TYPE
            (TYPE
              (TYPE_NAME String)))
          (MEMBER_NAME getHello) FORMAL_PARAMETER_LIST
          (INIT_EXPR
            (EXPR
              (GET_EXPR
                (MEMBER_NAME hello)))))
        (MEMBER_DECL
          (MEMBER_TYPE
            (TYPE
              (TYPE_NAME String)))
          (MEMBER_NAME string)
          (INIT_EXPR
            (EXPR
              (MEMBER_NAME hello)))
          (ANNOTATION_LIST
            (LANG_ANNOTATION mutable)))
        (EXPR
          (:=
            (MEMBER_NAME string)
            (EXPR
              (STRING_CST "Hello Gavin"))))
        (MEMBER_DECL
          (MEMBER_TYPE
            (TYPE
              (TYPE_NAME Natural)))
          (MEMBER_NAME x))
        (EXPR
          (=
            (MEMBER_NAME x)
            (EXPR
              (INT_CST 0))))
        (MEMBER_DECL
          (MEMBER_TYPE
            (TYPE
              (TYPE_NAME Natural)))
          (MEMBER_NAME y)
          (INIT_EXPR
            (EXPR
              (MEMBER_NAME x)))
          (ANNOTATION_LIST
            (LANG_ANNOTATION mutable)))
        (EXPR
          (:=
            (MEMBER_NAME y)
            (EXPR
              (*
                (MEMBER_NAME y)
                (MEMBER_NAME x)))))
        (EXPR
          (EXPR
            (MEMBER_NAME y)
            (POSTFIX_EXPR ++)))
        (EXPR
          (EXPR
            (MEMBER_NAME y)
            (POSTFIX_EXPR --)))
        (EXPR
          (PREFIX_EXPR ++
            (MEMBER_NAME y)))
        (EXPR
          (PREFIX_EXPR --
            (MEMBER_NAME y)))
        (EXPR
          (+=
            (MEMBER_NAME y)
            (EXPR
              (INT_CST 5))))
        (EXPR
          (-=
            (MEMBER_NAME y)
            (EXPR
              (INT_CST 5))))
        (EXPR
          (*=
            (MEMBER_NAME y)
            (EXPR
              (INT_CST 2))))
        (EXPR
          (/=
            (MEMBER_NAME y)
            (EXPR
              (INT_CST 2))))
        (EXPR
          (%=
            (MEMBER_NAME y)
            (EXPR
              (INT_CST 7))))
        (MEMBER_DECL
          (MEMBER_TYPE
            (TYPE
              (TYPE_NAME Boolean)))
          (MEMBER_NAME b)
          (INIT_EXPR
            (EXPR
              (MEMBER_NAME true)))
          (ANNOTATION_LIST
            (LANG_ANNOTATION mutable)))
        (EXPR
          (||=
            (MEMBER_NAME b)
            (EXPR
              (MEMBER_NAME b))))
        (EXPR
          (&&=
            (MEMBER_NAME b)
            (EXPR
              (MEMBER_NAME b))))
        (EXPR
          (|=
            (MEMBER_NAME b)
            (EXPR
              (MEMBER_NAME b))))
        (EXPR
          (&=
            (MEMBER_NAME b)
            (EXPR
              (MEMBER_NAME b))))
        (EXPR
          (^=
            (MEMBER_NAME b)
            (EXPR
              (MEMBER_NAME false))))
        (MEMBER_DECL
          (MEMBER_TYPE
            (TYPE
              (TYPE_NAME String)))
          (MEMBER_NAME qux)
          (INIT_EXPR
            (EXPR null))
          (ANNOTATION_LIST
            (LANG_ANNOTATION mutable)
            (LANG_ANNOTATION optional)))
        (EXPR
          (?=
            (MEMBER_NAME qux)
            (EXPR
              (STRING_CST "Hello"))))
        (TYPE_DECL
          (CLASS_DECL
            (TYPE_NAME Bar)
            (FORMAL_PARAMETER_LIST
              (FORMAL_PARAMETER
                (TYPE
                  (TYPE_NAME Boolean))
                (ARG_NAME b))) BLOCK))
        (EXPR
          (EXPR
            (TYPE_NAME Bar)
            (CALL_EXPR
              (ARG_LIST
                (EXPR
                  (MEMBER_NAME true))))))
        (EXPR
          (EXPR
            (TYPE_NAME Bar)
            (CALL_EXPR
              (ARG_LIST
                (NAMED_ARG
                  (ARG_NAME b)
                  (INIT_EXPR
                    (EXPR
                      (MEMBER_NAME false))))))))
        (TYPE_DECL
          (CLASS_DECL
            (TYPE_NAME Foo) FORMAL_PARAMETER_LIST
            (BLOCK
              (MEMBER_DECL
                (MEMBER_TYPE void)
                (MEMBER_NAME instanceMethod)
                (FORMAL_PARAMETER_LIST
                  (FORMAL_PARAMETER
                    (TYPE
                      (TYPE_NAME Natural))
                    (ARG_NAME n))) BLOCK)
              (TYPE_DECL
                (CLASS_DECL
                  (TYPE_NAME Baz)
                  (FORMAL_PARAMETER_LIST
                    (FORMAL_PARAMETER
                      (TYPE
                        (TYPE_NAME String))
                      (ARG_NAME s))) BLOCK)))))
        (MEMBER_DECL
          (MEMBER_TYPE void)
          (MEMBER_NAME method)
          (FORMAL_PARAMETER_LIST
            (FORMAL_PARAMETER
              (TYPE
                (TYPE_NAME Float))
              (ARG_NAME f))) BLOCK)
        (EXPR
          (EXPR
            (TYPE_NAME Foo)
            (CALL_EXPR ARG_LIST) .
            (MEMBER_NAME instanceMethod)
            (CALL_EXPR
              (ARG_LIST
                (EXPR
                  (INT_CST 2))))))
        (EXPR
          (EXPR
            (TYPE_NAME Foo)
            (CALL_EXPR ARG_LIST) .
            (MEMBER_NAME instanceMethod)
            (CALL_EXPR
              (ARG_LIST
                (NAMED_ARG
                  (ARG_NAME n)
                  (INIT_EXPR
                    (EXPR
                      (INT_CST 0))))))))
        (EXPR
          (EXPR
            (MEMBER_NAME method)
            (CALL_EXPR
              (ARG_LIST
                (EXPR
                  (FLOAT_CST 1.0))))))
        (EXPR
          (EXPR
            (MEMBER_NAME method)
            (CALL_EXPR
              (ARG_LIST
                (NAMED_ARG
                  (ARG_NAME f)
                  (INIT_EXPR
                    (EXPR
                      (FLOAT_CST 2.5))))))))
        (EXPR
          (EXPR
            (TYPE_NAME Foo)
            (CALL_EXPR ARG_LIST) .
            (TYPE_NAME Baz)
            (CALL_EXPR
              (ARG_LIST
                (EXPR
                  (STRING_CST "hello"))))))
        (EXPR
          (EXPR
            (TYPE_NAME Foo)
            (CALL_EXPR ARG_LIST) .
            (TYPE_NAME Baz)
            (CALL_EXPR
              (ARG_LIST
                (NAMED_ARG
                  (ARG_NAME s)
                  (INIT_EXPR
                    (EXPR
                      (STRING_CST "goodbye"))))))))))))
