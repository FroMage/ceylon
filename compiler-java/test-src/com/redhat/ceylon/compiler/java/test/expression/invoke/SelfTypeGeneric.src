package com.redhat.ceylon.compiler.java.test.expression.invoke;

interface Self<T extends .com.redhat.ceylon.compiler.java.test.expression.invoke.Self<T>> {
}
final class Self$impl<T extends .com.redhat.ceylon.compiler.java.test.expression.invoke.Self<T>> {
    private final .com.redhat.ceylon.compiler.java.test.expression.invoke.Self<T> $this;
    
    Self$impl(.com.redhat.ceylon.compiler.java.test.expression.invoke.Self<T> $this) {
        this.$this = $this;
    }
}
class X implements .com.redhat.ceylon.compiler.java.test.expression.invoke.Self<.com.redhat.ceylon.compiler.java.test.expression.invoke.X> {
    private final .com.redhat.ceylon.compiler.java.test.expression.invoke.Self$impl<.com.redhat.ceylon.compiler.java.test.expression.invoke.X> $Self$impl;
    
    X() {
        this.$Self$impl = new .com.redhat.ceylon.compiler.java.test.expression.invoke.Self$impl<.com.redhat.ceylon.compiler.java.test.expression.invoke.X>(this);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.X();
    }
}
interface Inv<T> {
}
final class Inv$impl<T> {
    private final .com.redhat.ceylon.compiler.java.test.expression.invoke.Inv<T> $this;
    
    Inv$impl(.com.redhat.ceylon.compiler.java.test.expression.invoke.Inv<T> $this) {
        this.$this = $this;
    }
}
final class selfTypeGeneric {
    
    private selfTypeGeneric() {
    }
    
    static void selfTypeGeneric() {
        
        final class l1$getter {
            
            .com.redhat.ceylon.compiler.java.test.expression.invoke.Inv<.com.redhat.ceylon.compiler.java.test.expression.invoke.Self<.com.redhat.ceylon.compiler.java.test.expression.invoke.X>> getL1() {
                throw new .ceylon.language.Exception(null, null);
            }
            
            private l1$getter() {
            }
        }
        final l1$getter l1$getter = new l1$getter();
        
        final class l2$getter {
            
            .com.redhat.ceylon.compiler.java.test.expression.invoke.Inv<.com.redhat.ceylon.compiler.java.test.expression.invoke.X> getL2() {
                throw new .ceylon.language.Exception(null, null);
            }
            
            private l2$getter() {
            }
        }
        final l2$getter l2$getter = new l2$getter();
        final .com.redhat.ceylon.compiler.java.test.expression.invoke.Inv<.com.redhat.ceylon.compiler.java.test.expression.invoke.Self<.com.redhat.ceylon.compiler.java.test.expression.invoke.X>> l3 = (.com.redhat.ceylon.compiler.java.test.expression.invoke.Inv<.com.redhat.ceylon.compiler.java.test.expression.invoke.Self<.com.redhat.ceylon.compiler.java.test.expression.invoke.X>>)(.com.redhat.ceylon.compiler.java.test.expression.invoke.Inv)l2$getter.getL2();
        final .com.redhat.ceylon.compiler.java.test.expression.invoke.Inv<.com.redhat.ceylon.compiler.java.test.expression.invoke.X> l4 = (.com.redhat.ceylon.compiler.java.test.expression.invoke.Inv<.com.redhat.ceylon.compiler.java.test.expression.invoke.X>)(.com.redhat.ceylon.compiler.java.test.expression.invoke.Inv)l1$getter.getL1();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.selfTypeGeneric.selfTypeGeneric();
    }
}
