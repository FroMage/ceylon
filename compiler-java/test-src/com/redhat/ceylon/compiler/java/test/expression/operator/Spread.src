package com.redhat.ceylon.compiler.java.test.expression.operator;

final class m {
    
    private m() {
    }
    
    static void m(final .ceylon.language.Iterable<? extends .ceylon.language.String> seq2) {
        final .ceylon.language.Sequence<? extends .ceylon.language.String> seq = new .ceylon.language.ArraySequence<.ceylon.language.String>(.ceylon.language.String.instance("Hello"), .ceylon.language.String.instance("World"));
        final .ceylon.language.Sequence<? extends .ceylon.language.Integer> ini = (let .ceylon.language.FixedSized<? extends .ceylon.language.String> $spreadTest$0 = seq in ; (let .ceylon.language.Sequence<? extends .ceylon.language.String> $spread$1$0 = (.ceylon.language.Sequence<? extends .ceylon.language.String>)$spreadTest$0,int $spread$1$2 = (int)$spread$1$0.getSize(),.ceylon.language.Integer[] $spread$1$4 = new .ceylon.language.Integer[$spread$1$2] in for (int $index$2 = 0; $index$2 < $spread$1$2; $index$2++) $spread$1$4[$index$2] = .ceylon.language.Integer.instance($spread$1$0.item(.ceylon.language.Integer.instance($index$2)).getSize());; new .ceylon.language.ArraySequence<.ceylon.language.Integer>($spread$1$4)));
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer> ini2 = (let .ceylon.language.FixedSized<? extends .ceylon.language.String> $spreadTest$3 = (.ceylon.language.FixedSized<? extends .ceylon.language.String>)seq2 in ; !$spreadTest$3.getEmpty() ? (let .ceylon.language.Sequence<? extends .ceylon.language.String> $spread$4$0 = (.ceylon.language.Sequence<? extends .ceylon.language.String>)$spreadTest$3,int $spread$4$2 = (int)$spread$4$0.getSize(),.ceylon.language.Integer[] $spread$4$4 = new .ceylon.language.Integer[$spread$4$2] in for (int $index$5 = 0; $index$5 < $spread$4$2; $index$5++) $spread$4$4[$index$5] = .ceylon.language.Integer.instance($spread$4$0.item(.ceylon.language.Integer.instance($index$5)).getSize());; new .ceylon.language.ArraySequence<.ceylon.language.Integer>($spread$4$4)) : .ceylon.language.$empty.getEmpty());
    }
}
