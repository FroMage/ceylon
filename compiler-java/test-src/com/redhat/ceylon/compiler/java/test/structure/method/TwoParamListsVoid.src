package com.redhat.ceylon.compiler.java.test.structure.method;

final class twoParamListsVoid {
    
    private twoParamListsVoid() {
    }
    
    static void twoParamListsVoid() {
        
        final class f {
            
            private f() {
            }
            
            .ceylon.language.Callable<? extends .java.lang.Object> f(final .java.lang.String s) {
                return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("ceylon.language.Callable<ceylon.language.Void>"){
                    
                    @.java.lang.Override
                    public .java.lang.Object $call() {
                        .ceylon.language.print.print(.ceylon.language.String.instance(s));
                        return null;
                    }
                };
            }
        }
        final f f = new f();
        
        final class g {
            
            private g() {
            }
            
            .ceylon.language.Callable<? extends .java.lang.Object> g(final .java.lang.String s) {
                return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("ceylon.language.Callable<ceylon.language.Void>"){
                    
                    @.java.lang.Override
                    public .java.lang.Object $call() {
                        return (
                            let
                            {
                                .ceylon.language.print.print(.ceylon.language.String.instance(s));
                            }
                            returning null;
                        );
                    }
                };
            }
        }
        final g g = new g();
        f.f("hello").$call();
        g.g("hello").$call();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.structure.method.twoParamListsVoid.twoParamListsVoid();
    }
}