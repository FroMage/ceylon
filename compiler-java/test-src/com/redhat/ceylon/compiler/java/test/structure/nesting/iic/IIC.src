package com.redhat.ceylon.compiler.java.test.structure.nesting.iic;

interface I$II<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> {
}
interface I<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> {
    
    public abstract <U>T m1(final X b, final U u);
    
    public abstract <U>T m1(final X b);
    
    public abstract <U>U m1$u(final X b);
}
final class I$impl<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> {
    private final .com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I<? extends T, ? super X> $this;
    
    public final <U>T m1(final X b) {
        return (
            let
            {
                U $ceylontmp$u$1 = m1$u(b);
            }
            returning $this.m1(b, $ceylontmp$u$1);
        );
    }
    
    public final <U>U m1$u(final X b) {
        return null;
    }
    
    final class II$impl {
        private final .com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$II<? extends T, ? super X> $this;
        
        class IIC {
            
            private final T m2() {
                return m1(null);
            }
            
            IIC() {
            }
        }
        
        II$impl(.com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I$II<? extends T, ? super X> $this) {
            this.$this = $this;
        }
    }
    
    I$impl(.com.redhat.ceylon.compiler.java.test.structure.nesting.iic.I<? extends T, ? super X> $this) {
        this.$this = $this;
    }
}