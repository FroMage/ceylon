package com.redhat.ceylon.compiler.java.test.interop;

final class methods {
    
    private methods() {
    }
    
    static void methods() {
        final .java.io.File f1 = new .java.io.File("file1");
        final .java.io.File f2 = new .java.io.File("file2");
        .ceylon.language.print.print(.ceylon.language.Boolean.instance(f1.canRead()));
        final long cmp = f1.compareTo(f2);
        f1.listFiles();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.methods.methods();
    }
}
final class overloadedMethodsAndSubClasses {
    
    private overloadedMethodsAndSubClasses() {
    }
    
    static void overloadedMethodsAndSubClasses() {
        final .com.redhat.ceylon.compiler.java.test.interop.JavaWithOverloadedMembersSubClass inst = new .com.redhat.ceylon.compiler.java.test.interop.JavaWithOverloadedMembersSubClass();
        inst.method();
        inst.method(1L);
        inst.method(1L, 2L);
        inst.topMethod();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.overloadedMethodsAndSubClasses.overloadedMethodsAndSubClasses();
    }
}
final class overloadedConstructors {
    
    private overloadedConstructors() {
    }
    
    static void overloadedConstructors() {
        final .com.redhat.ceylon.compiler.java.test.interop.JavaWithOverloadedMembersSubClass inst = new .com.redhat.ceylon.compiler.java.test.interop.JavaWithOverloadedMembersSubClass();
        final .com.redhat.ceylon.compiler.java.test.interop.JavaWithOverloadedMembersSubClass inst2 = new .com.redhat.ceylon.compiler.java.test.interop.JavaWithOverloadedMembersSubClass(2L);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.overloadedConstructors.overloadedConstructors();
    }
}
class OverloadedMembersAndSubClasses extends .com.redhat.ceylon.compiler.java.test.interop.JavaWithOverloadedMembersSubClass {
    
    private final void test() {
        method();
        method(1L);
        method(1L, 2L);
        topMethod();
    }
    
    OverloadedMembersAndSubClasses() {
        super();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.interop.OverloadedMembersAndSubClasses();
    }
}
class OverloadedMembersAndSubClasses2 extends .com.redhat.ceylon.compiler.java.test.interop.JavaWithOverloadedMembersSubClass {
    
    OverloadedMembersAndSubClasses2() {
        super(2L);
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.interop.OverloadedMembersAndSubClasses2();
    }
}
final class variadicMethods {
    
    private variadicMethods() {
    }
    
    static void variadicMethods() {
        
        final class box {
            
            private box() {
            }
            
            <T>T box(final T t) {
                return t;
            }
        }
        final box box = new box();
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        java.variadicByte((byte)1L, (byte)box.<.ceylon.language.Integer>box(.ceylon.language.Integer.instance(2L)).longValue(), (byte)3L);
        java.variadicLong(1L, box.<.ceylon.language.Integer>box(.ceylon.language.Integer.instance(2L)).longValue(), 3L);
        java.variadicLong(1L);
        java.variadicLong(box.<.ceylon.language.Integer>box(.ceylon.language.Integer.instance(1L)).longValue());
        java.variadicLong();
        java.variadicJavaString("a", box.<.ceylon.language.String>box(.ceylon.language.String.instance("b")).toString(), "c");
        java.variadicJavaString("a");
        java.variadicJavaString(box.<.ceylon.language.String>box(.ceylon.language.String.instance("a")).toString());
        java.variadicJavaString();
        final .ceylon.language.String string = .ceylon.language.String.instance("a");
        java.variadicJavaString((
            let
            {
                .ceylon.language.String $ceylontmp0 = string;
            }
            returning $ceylontmp0 != null ? $ceylontmp0.toString() : null;
        ));
        java.variadicCeylonString(.ceylon.language.String.instance("a"), box.<.ceylon.language.String>box(.ceylon.language.String.instance("b")), .ceylon.language.String.instance("c"));
        java.variadicObject(.ceylon.language.String.instance("a"), box.<.ceylon.language.String>box(.ceylon.language.String.instance("b")), .ceylon.language.Integer.instance(1L), box.<.ceylon.language.Integer>box(.ceylon.language.Integer.instance(2L)));
        java.variadicObject(new .java.lang.String("a"), new .java.lang.Integer((int)1L));
        java.<.ceylon.language.Integer>variadicT(.ceylon.language.Integer.instance(1L), box.<.ceylon.language.Integer>box(.ceylon.language.Integer.instance(2L)), .ceylon.language.Integer.instance(3L));
        java.<.ceylon.language.String>variadicT(.ceylon.language.String.instance("a"), box.<.ceylon.language.String>box(.ceylon.language.String.instance("b")), .ceylon.language.String.instance("c"));
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.interop.variadicMethods.variadicMethods();
    }
}