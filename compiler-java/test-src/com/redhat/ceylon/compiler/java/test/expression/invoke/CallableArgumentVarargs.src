package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class callableArgumentVarargs_f {
    
    private callableArgumentVarargs_f() {
    }
    
    static void callableArgumentVarargs_f(final .ceylon.language.Callable<? extends .java.lang.Object> foo) {
    }
}
final class callableArgumentVarargs_g {
    
    private callableArgumentVarargs_g() {
    }
    
    static void callableArgumentVarargs_g(final .ceylon.language.Iterable<? extends .ceylon.language.String> s) {
    }
}
final class callableArgumentVarargs_m {
    
    private callableArgumentVarargs_m() {
    }
    
    static void callableArgumentVarargs_m() {
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentVarargs_f.callableArgumentVarargs_f(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("Callable<Void,String[]>"){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0) {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentVarargs_g.callableArgumentVarargs_g((.ceylon.language.Iterable<? extends .ceylon.language.String>)$param$0);
                return null;
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentVarargs_m.callableArgumentVarargs_m();
    }
}
