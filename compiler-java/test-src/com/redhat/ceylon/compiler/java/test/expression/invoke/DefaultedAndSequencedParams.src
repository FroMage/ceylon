package com.redhat.ceylon.compiler.java.test.expression.invoke;

class DefaultedAndSequenced {
    
    private final void m(final .java.lang.String s, final long i, final .ceylon.language.Iterable<? extends .ceylon.language.Boolean> b) {
    }
    
    private final .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced self() {
        return this;
    }
    
    private final void positional() {
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$0$this$ = this,
                .java.lang.String $arg$0$0 = "",
                long $arg$0$1 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$i($arg$0$this$, $arg$0$0),
                .ceylon.language.Iterable<? extends .ceylon.language.Boolean> $arg$0$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$0$this$, $arg$0$0, $arg$0$1)
            in {
                m($arg$0$0, $arg$0$1, $arg$0$2);
            }
            returning null
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$1$this$ = this,
                .java.lang.String $arg$1$0 = "",
                long $arg$1$1 = 2L,
                .ceylon.language.Iterable<? extends .ceylon.language.Boolean> $arg$1$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$1$this$, $arg$1$0, $arg$1$1)
            in {
                m($arg$1$0, $arg$1$1, $arg$1$2);
            }
            returning null
        );
        m("", 2L, new .ceylon.language.ArraySequence(.ceylon.language.Boolean.instance(false)));
        final .ceylon.language.Iterable<? extends .ceylon.language.Boolean> x = new .ceylon.language.ArraySequence<.ceylon.language.Boolean>(.ceylon.language.Boolean.instance(false), .ceylon.language.Boolean.instance(false));
        m("", 2L, x);
    }
    
    private final void qmePositional() {
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$2$callable$ = self(),
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$2$this$ = $arg$2$callable$,
                .java.lang.String $arg$2$0 = "",
                long $arg$2$1 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$i($arg$2$this$, $arg$2$0),
                .ceylon.language.Iterable<? extends .ceylon.language.Boolean> $arg$2$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$2$this$, $arg$2$0, $arg$2$1)
            in {
                $arg$2$callable$.m($arg$2$0, $arg$2$1, $arg$2$2);
            }
            returning null
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$3$callable$ = self(),
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$3$this$ = $arg$3$callable$,
                .java.lang.String $arg$3$0 = "",
                long $arg$3$1 = 2L,
                .ceylon.language.Iterable<? extends .ceylon.language.Boolean> $arg$3$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$3$this$, $arg$3$0, $arg$3$1)
            in {
                $arg$3$callable$.m($arg$3$0, $arg$3$1, $arg$3$2);
            }
            returning null
        );
        self().m("", 2L, new .ceylon.language.ArraySequence(.ceylon.language.Boolean.instance(false)));
        final .ceylon.language.Iterable<? extends .ceylon.language.Boolean> x = new .ceylon.language.ArraySequence<.ceylon.language.Boolean>(.ceylon.language.Boolean.instance(false), .ceylon.language.Boolean.instance(false));
        self().m("", 2L, x);
    }
    
    private final void qtePositional() {
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$4$callable$ = new .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced(),
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$4$this$ = $arg$4$callable$,
                .java.lang.String $arg$4$0 = "",
                long $arg$4$1 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$i($arg$4$this$, $arg$4$0),
                .ceylon.language.Iterable<? extends .ceylon.language.Boolean> $arg$4$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$4$this$, $arg$4$0, $arg$4$1)
            in {
                $arg$4$callable$.m($arg$4$0, $arg$4$1, $arg$4$2);
            }
            returning null
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$5$callable$ = new .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced(),
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$5$this$ = $arg$5$callable$,
                .java.lang.String $arg$5$0 = "",
                long $arg$5$1 = 2L,
                .ceylon.language.Iterable<? extends .ceylon.language.Boolean> $arg$5$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$5$this$, $arg$5$0, $arg$5$1)
            in {
                $arg$5$callable$.m($arg$5$0, $arg$5$1, $arg$5$2);
            }
            returning null
        );
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced().m("", 2L, new .ceylon.language.ArraySequence(.ceylon.language.Boolean.instance(false)));
        final .ceylon.language.Iterable<? extends .ceylon.language.Boolean> x = new .ceylon.language.ArraySequence<.ceylon.language.Boolean>(.ceylon.language.Boolean.instance(false), .ceylon.language.Boolean.instance(false));
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced().m("", 2L, x);
    }
    
    private final void namedArgs() {
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$6$this$ = this,
                .java.lang.String $arg$6$0 = "",
                long $arg$6$1 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$i($arg$6$this$, $arg$6$0),
                .ceylon.language.Iterable $arg$6$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$6$this$, $arg$6$0, $arg$6$1)
            in {
                m($arg$6$0, $arg$6$1, $arg$6$2);
            }
            returning null
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$7$this$ = this,
                .java.lang.String $arg$7$0 = "",
                long $arg$7$1 = 2L,
                .ceylon.language.Iterable $arg$7$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$7$this$, $arg$7$0, $arg$7$1)
            in {
                m($arg$7$0, $arg$7$1, $arg$7$2);
            }
            returning null
        );
        (
            let
                .java.lang.String $arg$8$0 = "",
                long $arg$8$1 = 2L,
                .ceylon.language.Iterable<? extends .ceylon.language.Boolean> $arg$8$2 = new .ceylon.language.ArraySequence<.ceylon.language.Boolean>(.ceylon.language.Boolean.instance(false))
            in {
                m($arg$8$0, $arg$8$1, $arg$8$2);
            }
            returning null
        );
        (
            let
                .java.lang.String $arg$9$0 = "",
                long $arg$9$1 = 2L,
                .ceylon.language.Iterable $arg$9$2 = new .ceylon.language.ArraySequence(.ceylon.language.Boolean.instance(true), .ceylon.language.Boolean.instance(true))
            in {
                m($arg$9$0, $arg$9$1, $arg$9$2);
            }
            returning null
        );
    }
    
    private final void qmeNamedArgs() {
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$10$callable$ = self(),
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$10$this$ = $arg$10$callable$,
                .java.lang.String $arg$10$0 = "",
                long $arg$10$1 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$i($arg$10$this$, $arg$10$0),
                .ceylon.language.Iterable $arg$10$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$10$this$, $arg$10$0, $arg$10$1)
            in {
                $arg$10$callable$.m($arg$10$0, $arg$10$1, $arg$10$2);
            }
            returning null
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$11$callable$ = self(),
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$11$this$ = $arg$11$callable$,
                .java.lang.String $arg$11$0 = "",
                long $arg$11$1 = 2L,
                .ceylon.language.Iterable $arg$11$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$11$this$, $arg$11$0, $arg$11$1)
            in {
                $arg$11$callable$.m($arg$11$0, $arg$11$1, $arg$11$2);
            }
            returning null
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$12$callable$ = self(),
                .java.lang.String $arg$12$0 = "",
                long $arg$12$1 = 2L,
                .ceylon.language.Iterable<? extends .ceylon.language.Boolean> $arg$12$2 = new .ceylon.language.ArraySequence<.ceylon.language.Boolean>(.ceylon.language.Boolean.instance(false))
            in {
                $arg$12$callable$.m($arg$12$0, $arg$12$1, $arg$12$2);
            }
            returning null
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$13$callable$ = self(),
                .java.lang.String $arg$13$0 = "",
                long $arg$13$1 = 2L,
                .ceylon.language.Iterable $arg$13$2 = new .ceylon.language.ArraySequence(.ceylon.language.Boolean.instance(true), .ceylon.language.Boolean.instance(true))
            in {
                $arg$13$callable$.m($arg$13$0, $arg$13$1, $arg$13$2);
            }
            returning null
        );
    }
    
    private final void qteNamedArgs() {
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$14$callable$ = new .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced(),
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$14$this$ = $arg$14$callable$,
                .java.lang.String $arg$14$0 = "",
                long $arg$14$1 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$i($arg$14$this$, $arg$14$0),
                .ceylon.language.Iterable $arg$14$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$14$this$, $arg$14$0, $arg$14$1)
            in {
                $arg$14$callable$.m($arg$14$0, $arg$14$1, $arg$14$2);
            }
            returning null
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$15$callable$ = new .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced(),
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$15$this$ = $arg$15$callable$,
                .java.lang.String $arg$15$0 = "",
                long $arg$15$1 = 2L,
                .ceylon.language.Iterable $arg$15$2 = .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced.DefaultedAndSequenced$impl.m$b($arg$15$this$, $arg$15$0, $arg$15$1)
            in {
                $arg$15$callable$.m($arg$15$0, $arg$15$1, $arg$15$2);
            }
            returning null
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$16$callable$ = new .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced(),
                .java.lang.String $arg$16$0 = "",
                long $arg$16$1 = 2L,
                .ceylon.language.Iterable<? extends .ceylon.language.Boolean> $arg$16$2 = new .ceylon.language.ArraySequence<.ceylon.language.Boolean>(.ceylon.language.Boolean.instance(false))
            in {
                $arg$16$callable$.m($arg$16$0, $arg$16$1, $arg$16$2);
            }
            returning null
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $arg$17$callable$ = new .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced(),
                .java.lang.String $arg$17$0 = "",
                long $arg$17$1 = 2L,
                .ceylon.language.Iterable $arg$17$2 = new .ceylon.language.ArraySequence(.ceylon.language.Boolean.instance(true), .ceylon.language.Boolean.instance(true))
            in {
                $arg$17$callable$.m($arg$17$0, $arg$17$1, $arg$17$2);
            }
            returning null
        );
    }
    
    DefaultedAndSequenced() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced();
    }
    
    static final class DefaultedAndSequenced$impl {
        
        DefaultedAndSequenced$impl() {
            super();
        }
        
        static long m$i(.com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $this, final .java.lang.String s) {
            return 1L;
        }
        
        static .ceylon.language.Iterable<? extends .ceylon.language.Boolean> m$b(.com.redhat.ceylon.compiler.java.test.expression.invoke.DefaultedAndSequenced $this, final .java.lang.String s, final long i) {
            return new .ceylon.language.ArraySequence<.ceylon.language.Boolean>(.ceylon.language.Boolean.instance(true), .ceylon.language.Boolean.instance(false));
        }
    }
}