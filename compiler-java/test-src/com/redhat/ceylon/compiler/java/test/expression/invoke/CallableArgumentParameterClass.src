package com.redhat.ceylon.compiler.java.test.expression.invoke;

class CallableArgumentParameterClass {
    
    CallableArgumentParameterClass() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentParameterClass();
    }
}
final class callableArgumentParameterClass_f {
    
    private callableArgumentParameterClass_f() {
    }
    
    static void callableArgumentParameterClass_f(final .ceylon.language.Callable<? extends .java.lang.Object> foo) {
    }
}
final class callableArgumentParameterClass_bar {
    
    private callableArgumentParameterClass_bar() {
    }
    
    static void callableArgumentParameterClass_bar(final .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentParameterClass c) {
    }
}
final class callableArgumentParameterClass_m {
    
    private callableArgumentParameterClass_m() {
    }
    
    static void callableArgumentParameterClass_m() {
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterClass_f.callableArgumentParameterClass_f(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("Callable<Void,CallableArgumentParameterClass>"){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0) {
                .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterClass_bar.callableArgumentParameterClass_bar((.com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentParameterClass)$param$0);
                return null;
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentParameterClass_m.callableArgumentParameterClass_m();
    }
}