package com.redhat.ceylon.compiler.java.test.expression.invoke;

class NamedArgumentWithSequence {
    
    private final void m(final long a, final ceylon.language.Iterable<? extends ceylon.language.Integer> b) {
    }
    
    private final void m2(final .java.lang.Throwable a, final ceylon.language.Iterable<? extends .java.lang.Throwable> b) {
    }
    
    private final void m3(final com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithSequence a, final ceylon.language.Iterable<? extends com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithSequence> b) {
    }
    
    private final void invoke() {
        (let long $arg$0$0 = 1L,ceylon.language.Iterable $arg$0$1 = new ceylon.language.ArraySequence(.ceylon.language.Integer.instance(2L), .ceylon.language.Integer.instance(3L), .ceylon.language.Integer.instance(4L)) in m($arg$0$0, $arg$0$1); null);
        final .java.lang.Throwable e = new .ceylon.language.Exception(.ceylon.language.String.instance(""), null);
        (let .java.lang.Throwable $arg$1$0 = e,ceylon.language.Iterable $arg$1$1 = new ceylon.language.ArraySequence(e, e, e) in m2($arg$1$0, $arg$1$1); null);
        (let com.redhat.ceylon.compiler.java.test.expression.invoke.NamedArgumentWithSequence $arg$2$0 = this,ceylon.language.Iterable $arg$2$1 = new ceylon.language.ArraySequence(this, this, this) in m3($arg$2$0, $arg$2$1); null);
    }
    
    NamedArgumentWithSequence() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new NamedArgumentWithSequence();
    }
}