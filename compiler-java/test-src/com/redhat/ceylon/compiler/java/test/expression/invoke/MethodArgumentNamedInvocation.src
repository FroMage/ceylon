package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class methodArgumentNamedIncovation {
    
    private methodArgumentNamedIncovation() {
    }
    
    static void methodArgumentNamedIncovation() {
        
        final class callFunction {
            
            private callFunction() {
            }
            
            void callFunction(final .ceylon.language.Callable<? extends .ceylon.language.String> f) {
            }
        }
        final callFunction callFunction = new callFunction();
        (
            let
                .ceylon.language.Callable<? extends .ceylon.language.String> $arg$0$0 = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>("Callable<String>"){
                    
                    @.java.lang.Override
                    public .ceylon.language.String $call(final .java.lang.Object $param$0) {
                        final .ceylon.language.Integer i = (.ceylon.language.Integer)$param$0;
                        return .ceylon.language.String.instance(i.power(.ceylon.language.Integer.instance(2L)).toString());
                    }
                }
            in {
                callFunction.callFunction($arg$0$0);
            }
            returning null
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.methodArgumentNamedIncovation.methodArgumentNamedIncovation();
    }
}