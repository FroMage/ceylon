package com.redhat.ceylon.compiler.java.test.interop;

class SatisfiesFileFilter implements java.io.FileFilter {
    
    @.java.lang.Override
    public final boolean accept(final java.io.File f) {
        return true;
    }
    
    SatisfiesFileFilter() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new SatisfiesFileFilter();
    }
}
class SatisfiesFilenameFilter implements java.io.FilenameFilter {
    
    @.java.lang.Override
    public final boolean accept(final java.io.File dir, final .java.lang.String name) {
        return true;
    }
    
    SatisfiesFilenameFilter() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new SatisfiesFilenameFilter();
    }
}
final class test {
    
    private test() {
    }
    
    static void test() {
        final java.io.File f1 = new java.io.File("file1");
        f1.listFiles(new com.redhat.ceylon.compiler.java.test.interop.SatisfiesFileFilter());
        f1.listFiles(new com.redhat.ceylon.compiler.java.test.interop.SatisfiesFilenameFilter());
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        test();
    }
}
class JavaInterfaceImpl implements com.redhat.ceylon.compiler.java.test.interop.JavaInterface<ceylon.language.Boolean> {
    
    @.java.lang.Override
    public final boolean booleanMethod(final boolean b) {
        return b;
    }
    
    @.java.lang.Override
    public final java.lang.Boolean boxedBooleanMethod(final java.lang.Boolean b) {
        return b;
    }
    
    @.java.lang.Override
    public final ceylon.language.Boolean ceylonBooleanMethod(final ceylon.language.Boolean b) {
        return b;
    }
    
    @.java.lang.Override
    public final ceylon.language.Boolean classTypeParamMethod(final ceylon.language.Boolean b) {
        return b;
    }
    
    @.java.lang.Override
    public final <M>M methodTypeParamMethod(final M b) {
        return b;
    }
    
    JavaInterfaceImpl() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new JavaInterfaceImpl();
    }
}