package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class anonymousArgument2 {
    
    private anonymousArgument2() {
    }
    
    static <Y>void anonymousArgument2(final Y y) {
        
        final class callFunction {
            
            private callFunction() {
            }
            
            <X>void callFunction(final .ceylon.language.Callable<? extends X> f) {
            }
        }
        final callFunction callFunction = new callFunction();
        callFunction.<.ceylon.language.String>callFunction(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>("String()"){
            
            @.java.lang.Override
            public .ceylon.language.String $call(final .java.lang.Object $param$0) {
                final .ceylon.language.Integer i = (.ceylon.language.Integer)$param$0;
                return .ceylon.language.String.instance(i.times(.ceylon.language.Integer.instance(3L)).toString());
            }
        });
        callFunction.<Y>callFunction(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<Y>("Y()"){
            
            @.java.lang.Override
            public Y $call(final .java.lang.Object $param$0) {
                final .ceylon.language.Integer i = (.ceylon.language.Integer)$param$0;
                return y;
            }
        });
    }
}