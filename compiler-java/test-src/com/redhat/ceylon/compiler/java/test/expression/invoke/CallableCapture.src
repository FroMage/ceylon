package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class higher {
    
    private higher() {
    }
    
    static .java.lang.String higher(final .ceylon.language.Callable<? extends .ceylon.language.String> f) {
        return "";
    }
}
final class callableCapture_foo {
    
    private callableCapture_foo() {
    }
    
    static .java.lang.String callableCapture_foo(final long i) {
        return "";
    }
}
final class callableCapture_m {
    
    private callableCapture_m() {
    }
    
    static void callableCapture_m() {
        final .ceylon.language.Callable<? extends .ceylon.language.String> callableCapture_bar = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>("Callable<String,Integer>"){
            
            @.java.lang.Override
            public .ceylon.language.String $call(final .java.lang.Object $param$0) {
                return .ceylon.language.String.instance(.com.redhat.ceylon.compiler.java.test.expression.invoke.callableCapture_foo.callableCapture_foo(((.ceylon.language.Integer)$param$0).longValue()));
            }
        };
        final boolean b = .com.redhat.ceylon.compiler.java.test.expression.invoke.higher.higher(callableCapture_bar).equals("");
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableCapture_m.callableCapture_m();
    }
}