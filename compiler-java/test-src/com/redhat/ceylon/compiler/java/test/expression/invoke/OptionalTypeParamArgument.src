package com.redhat.ceylon.compiler.java.test.expression.invoke;

class Foo<T> {
    
    public final void bar(final T t) {
    }
    
    Foo() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.Foo();
    }
}
final class m {
    
    private m() {
    }
    
    static void m() {
        final .com.redhat.ceylon.compiler.java.test.expression.invoke.Foo<.java.lang.Object> f = new .com.redhat.ceylon.compiler.java.test.expression.invoke.Foo<.java.lang.Object>();
        final .java.lang.Object o = .ceylon.language.Integer.instance(1L);
        f.bar(o);
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.invoke.Foo<.java.lang.Object> $arg$0$callable$ = f,
                .java.lang.Object $arg$0$0 = o
            in {
                $arg$0$callable$.bar($arg$0$0);
            }
            returning null
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.m.m();
    }
}