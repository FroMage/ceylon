package com.redhat.ceylon.compiler.java.test.expression.operator;

abstract class MyInteger extends .java.lang.Object implements .ceylon.language.Castable, .ceylon.language.Integral<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger>, .ceylon.language.Exponentiable<.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger, .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger> {
    
    MyInteger() {
        super();
    }
}
final class toplevelN1 {
    private static long value;
    static {
        value = 0L;
    }
    
    static long getToplevelN1() {
        return value;
    }
    
    static void setToplevelN1(long toplevelN1) {
        value = toplevelN1;
    }
    
    private toplevelN1() {
    }
}
final class toplevelN2 {
    private static long value;
    static {
        value = 0L;
    }
    
    static long getToplevelN2() {
        return value;
    }
    
    static void setToplevelN2(long toplevelN2) {
        value = toplevelN2;
    }
    
    private toplevelN2() {
    }
}
final class toplevelI1 {
    private static long value;
    static {
        value = 0L;
    }
    
    static long getToplevelI1() {
        return value;
    }
    
    static void setToplevelI1(long toplevelI1) {
        value = toplevelI1;
    }
    
    private toplevelI1() {
    }
}
class ArithmeticOperators {
    private final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger initN;
    private final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger initI;
    private long n1;
    
    private final long getN1() {
        return n1;
    }
    
    private final void setN1(long n1) {
        this.n1 = n1;
    }
    private long n2;
    
    private final long getN2() {
        return n2;
    }
    
    private final void setN2(long n2) {
        this.n2 = n2;
    }
    private long i1;
    
    private final long getI1() {
        return i1;
    }
    
    private final void setI1(long i1) {
        this.i1 = i1;
    }
    
    private final long getGetterN1() {
        return getN1();
    }
    
    private final void setGetterN1(long getterN1) {
        setN1(getterN1);
    }
    
    private final long getGetterN2() {
        return getN2();
    }
    
    private final void setGetterN2(long getterN2) {
        setN2(getterN2);
    }
    
    private final long getGetterI1() {
        return getI1();
    }
    
    private final void setGetterI1(long getterI1) {
        setI1(getterI1);
    }
    private .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedN1;
    
    private final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger getBoxedN1() {
        return boxedN1;
    }
    
    private final void setBoxedN1(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedN1) {
        this.boxedN1 = boxedN1;
    }
    private .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedN2;
    
    private final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger getBoxedN2() {
        return boxedN2;
    }
    
    private final void setBoxedN2(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedN2) {
        this.boxedN2 = boxedN2;
    }
    private .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedI1;
    
    private final .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger getBoxedI1() {
        return boxedI1;
    }
    
    private final void setBoxedI1(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger boxedI1) {
        this.boxedI1 = boxedI1;
    }
    
    private final void unboxedAttributes() {
        (
            let
                long $ceylontmpop0 = getN1()
            in {
                setN1($ceylontmpop0 + 1);
            }
            returning $ceylontmpop0
        );
        (
            let
                long $ceylontmpop1 = getN1() + 1
            in {
                setN1($ceylontmpop1);
            }
            returning $ceylontmpop1
        );
        (
            let
                long $ceylontmpop2 = getN1()
            in {
                setN1($ceylontmpop2 - 1);
            }
            returning $ceylontmpop2
        );
        (
            let
                long $ceylontmpop3 = getN1() - 1
            in {
                setN1($ceylontmpop3);
            }
            returning $ceylontmpop3
        );
        setI1(getN1());
        setI1(-getN1());
        setN1(getN1() + getN2());
        setI1(getN1() - getN2());
        setN1(getN1() * getN2());
        setN1(getN1() / getN2());
        setN1(getN1() % getN2());
        setN1(.ceylon.language.Integer.instance(getN1()).power(.ceylon.language.Integer.instance(getN2())).longValue());
        (
            let
                long $ceylontmpop4 = getN1() + getN2()
            in {
                setN1($ceylontmpop4);
            }
            returning $ceylontmpop4
        );
        (
            let
                long $ceylontmpop5 = getN1() * getN1()
            in {
                setN1($ceylontmpop5);
            }
            returning $ceylontmpop5
        );
        (
            let
                long $ceylontmpop6 = getN1() / getN2()
            in {
                setN1($ceylontmpop6);
            }
            returning $ceylontmpop6
        );
        (
            let
                long $ceylontmpop7 = getN1() % getN2()
            in {
                setN1($ceylontmpop7);
            }
            returning $ceylontmpop7
        );
    }
    
    private final void unboxedGetterAttributes() {
        (
            let
                long $ceylontmpop8 = getGetterN1()
            in {
                setGetterN1($ceylontmpop8 + 1);
            }
            returning $ceylontmpop8
        );
        (
            let
                long $ceylontmpop9 = getGetterN1() + 1
            in {
                setGetterN1($ceylontmpop9);
            }
            returning $ceylontmpop9
        );
        (
            let
                long $ceylontmpop10 = getGetterN1()
            in {
                setGetterN1($ceylontmpop10 - 1);
            }
            returning $ceylontmpop10
        );
        (
            let
                long $ceylontmpop11 = getGetterN1() - 1
            in {
                setGetterN1($ceylontmpop11);
            }
            returning $ceylontmpop11
        );
        setGetterI1(getGetterN1());
        setGetterI1(-getGetterN1());
        setGetterN1(getGetterN1() + getGetterN2());
        setGetterI1(getGetterN1() - getGetterN2());
        setGetterN1(getGetterN1() * getGetterN2());
        setGetterN1(getGetterN1() / getGetterN2());
        setGetterN1(getGetterN1() % getGetterN2());
        setGetterN1(.ceylon.language.Integer.instance(getGetterN1()).power(.ceylon.language.Integer.instance(getGetterN2())).longValue());
        (
            let
                long $ceylontmpop12 = getGetterN1() + getGetterN2()
            in {
                setGetterN1($ceylontmpop12);
            }
            returning $ceylontmpop12
        );
        (
            let
                long $ceylontmpop13 = getGetterN1() * getGetterN1()
            in {
                setGetterN1($ceylontmpop13);
            }
            returning $ceylontmpop13
        );
        (
            let
                long $ceylontmpop14 = getGetterN1() / getGetterN2()
            in {
                setGetterN1($ceylontmpop14);
            }
            returning $ceylontmpop14
        );
        (
            let
                long $ceylontmpop15 = getGetterN1() % getGetterN2()
            in {
                setGetterN1($ceylontmpop15);
            }
            returning $ceylontmpop15
        );
    }
    
    private final void unboxedQualifiedAttributes() {
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE16 = this,
                long $ceylontmpopV17 = $ceylontmpopE16.getN1()
            in {
                $ceylontmpopE16.setN1($ceylontmpopV17 + 1);
            }
            returning $ceylontmpopV17
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE18 = this,
                long $ceylontmpopV19 = $ceylontmpopE18.getN1() + 1
            in {
                $ceylontmpopE18.setN1($ceylontmpopV19);
            }
            returning $ceylontmpopV19
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE20 = this,
                long $ceylontmpopV21 = $ceylontmpopE20.getN1()
            in {
                $ceylontmpopE20.setN1($ceylontmpopV21 - 1);
            }
            returning $ceylontmpopV21
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE22 = this,
                long $ceylontmpopV23 = $ceylontmpopE22.getN1() - 1
            in {
                $ceylontmpopE22.setN1($ceylontmpopV23);
            }
            returning $ceylontmpopV23
        );
        this.setI1(this.getN1());
        this.setI1(-this.getN1());
        this.setN1(this.getN1() + this.getN2());
        this.setI1(this.getN1() - this.getN2());
        this.setN1(this.getN1() * this.getN2());
        this.setN1(this.getN1() / this.getN2());
        this.setN1(this.getN1() % this.getN2());
        this.setN1(.ceylon.language.Integer.instance(this.getN1()).power(.ceylon.language.Integer.instance(this.getN2())).longValue());
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE24 = this,
                long $ceylontmpopV25 = $ceylontmpopE24.getN1() + this.getN2()
            in {
                $ceylontmpopE24.setN1($ceylontmpopV25);
            }
            returning $ceylontmpopV25
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE26 = this,
                long $ceylontmpopV27 = $ceylontmpopE26.getN1() * this.getN1()
            in {
                $ceylontmpopE26.setN1($ceylontmpopV27);
            }
            returning $ceylontmpopV27
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE28 = this,
                long $ceylontmpopV29 = $ceylontmpopE28.getN1() / this.getN2()
            in {
                $ceylontmpopE28.setN1($ceylontmpopV29);
            }
            returning $ceylontmpopV29
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE30 = this,
                long $ceylontmpopV31 = $ceylontmpopE30.getN1() % this.getN2()
            in {
                $ceylontmpopE30.setN1($ceylontmpopV31);
            }
            returning $ceylontmpopV31
        );
    }
    
    private final void unboxedQualifiedGetterAttributes() {
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE32 = this,
                long $ceylontmpopV33 = $ceylontmpopE32.getGetterN1()
            in {
                $ceylontmpopE32.setGetterN1($ceylontmpopV33 + 1);
            }
            returning $ceylontmpopV33
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE34 = this,
                long $ceylontmpopV35 = $ceylontmpopE34.getGetterN1() + 1
            in {
                $ceylontmpopE34.setGetterN1($ceylontmpopV35);
            }
            returning $ceylontmpopV35
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE36 = this,
                long $ceylontmpopV37 = $ceylontmpopE36.getGetterN1()
            in {
                $ceylontmpopE36.setGetterN1($ceylontmpopV37 - 1);
            }
            returning $ceylontmpopV37
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE38 = this,
                long $ceylontmpopV39 = $ceylontmpopE38.getGetterN1() - 1
            in {
                $ceylontmpopE38.setGetterN1($ceylontmpopV39);
            }
            returning $ceylontmpopV39
        );
        this.setGetterI1(this.getGetterN1());
        this.setGetterI1(-this.getGetterN1());
        this.setGetterN1(this.getGetterN1() + this.getGetterN2());
        this.setGetterI1(this.getGetterN1() - this.getGetterN2());
        this.setGetterN1(this.getGetterN1() * this.getGetterN2());
        this.setGetterN1(this.getGetterN1() / this.getGetterN2());
        this.setGetterN1(this.getGetterN1() % this.getGetterN2());
        this.setGetterN1(.ceylon.language.Integer.instance(this.getGetterN1()).power(.ceylon.language.Integer.instance(this.getGetterN2())).longValue());
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE40 = this,
                long $ceylontmpopV41 = $ceylontmpopE40.getGetterN1() + this.getGetterN2()
            in {
                $ceylontmpopE40.setGetterN1($ceylontmpopV41);
            }
            returning $ceylontmpopV41
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE42 = this,
                long $ceylontmpopV43 = $ceylontmpopE42.getGetterN1() * this.getGetterN1()
            in {
                $ceylontmpopE42.setGetterN1($ceylontmpopV43);
            }
            returning $ceylontmpopV43
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE44 = this,
                long $ceylontmpopV45 = $ceylontmpopE44.getGetterN1() / this.getGetterN2()
            in {
                $ceylontmpopE44.setGetterN1($ceylontmpopV45);
            }
            returning $ceylontmpopV45
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE46 = this,
                long $ceylontmpopV47 = $ceylontmpopE46.getGetterN1() % this.getGetterN2()
            in {
                $ceylontmpopE46.setGetterN1($ceylontmpopV47);
            }
            returning $ceylontmpopV47
        );
    }
    
    private final void boxedQualifiedAttributes() {
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE48 = this,
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV49 = $ceylontmpopE48.getBoxedN1()
            in {
                $ceylontmpopE48.setBoxedN1($ceylontmpopV49.getSuccessor());
            }
            returning $ceylontmpopV49
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE50 = this,
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV51 = $ceylontmpopE50.getBoxedN1().getSuccessor()
            in {
                $ceylontmpopE50.setBoxedN1($ceylontmpopV51);
            }
            returning $ceylontmpopV51
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE52 = this,
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV53 = $ceylontmpopE52.getBoxedN1()
            in {
                $ceylontmpopE52.setBoxedN1($ceylontmpopV53.getPredecessor());
            }
            returning $ceylontmpopV53
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE54 = this,
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV55 = $ceylontmpopE54.getBoxedN1().getPredecessor()
            in {
                $ceylontmpopE54.setBoxedN1($ceylontmpopV55);
            }
            returning $ceylontmpopV55
        );
        this.setBoxedI1(this.getBoxedN1().getPositiveValue());
        this.setBoxedI1(this.getBoxedN1().getNegativeValue());
        this.setBoxedN1(this.getBoxedN1().plus(this.getBoxedN2()));
        this.setBoxedI1(this.getBoxedN1().minus(this.getBoxedN2()));
        this.setBoxedN1(this.getBoxedN1().times(this.getBoxedN2()));
        this.setBoxedN1(this.getBoxedN1().divided(this.getBoxedN2()));
        this.setBoxedN1(this.getBoxedN1().remainder(this.getBoxedN2()));
        this.setBoxedN1(this.getBoxedN1().power(this.getBoxedN2()));
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE56 = this,
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV57 = $ceylontmpopE56.getBoxedN1().plus(this.getBoxedN2())
            in {
                $ceylontmpopE56.setBoxedN1($ceylontmpopV57);
            }
            returning $ceylontmpopV57
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE58 = this,
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV59 = $ceylontmpopE58.getBoxedN1().times(this.getBoxedN1())
            in {
                $ceylontmpopE58.setBoxedN1($ceylontmpopV59);
            }
            returning $ceylontmpopV59
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE60 = this,
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV61 = $ceylontmpopE60.getBoxedN1().divided(this.getBoxedN2())
            in {
                $ceylontmpopE60.setBoxedN1($ceylontmpopV61);
            }
            returning $ceylontmpopV61
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.ArithmeticOperators $ceylontmpopE62 = this,
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpopV63 = $ceylontmpopE62.getBoxedN1().remainder(this.getBoxedN2())
            in {
                $ceylontmpopE62.setBoxedN1($ceylontmpopV63);
            }
            returning $ceylontmpopV63
        );
    }
    
    private final void unboxedLocals() {
        long n1 = 0L;
        long n2 = 0L;
        long i1 = 0L;
        n1++;
        ++n1;
        n1--;
        --n1;
        i1 = n1;
        i1 = -n1;
        n1 = n1 + n2;
        i1 = n1 - n2;
        n1 = n1 * n2;
        n1 = n1 / n2;
        n1 = n1 % n2;
        n1 = .ceylon.language.Integer.instance(n1).power(.ceylon.language.Integer.instance(n2)).longValue();
        n1 += n2;
        n1 *= n1;
        n1 /= n2;
        n1 %= n2;
    }
    
    private final void unboxedLocalGetters() {
        
        final class n1 {
            private long value;
            {
                value = 0L;
            }
            
            long getN1() {
                return value;
            }
            
            void setN1(long n1) {
                value = n1;
            }
            
            private n1() {
            }
        }
        final n1 n1 = new n1();
        
        final class n2 {
            private long value;
            {
                value = 0L;
            }
            
            long getN2() {
                return value;
            }
            
            void setN2(long n2) {
                value = n2;
            }
            
            private n2() {
            }
        }
        final n2 n2 = new n2();
        
        final class i1 {
            private long value;
            {
                value = 0L;
            }
            
            long getI1() {
                return value;
            }
            
            void setI1(long i1) {
                value = i1;
            }
            
            private i1() {
            }
        }
        final i1 i1 = new i1();
        
        final class getterN1$getter {
            
            long getGetterN1() {
                return n1.getN1();
            }
            
            private getterN1$getter() {
            }
        }
        final getterN1$getter getterN1$getter = new getterN1$getter();
        
        final class getterN1$setter {
            private long value;
            
            void setGetterN1(long getterN1) {
                n1.setN1(getterN1);
            }
            
            private getterN1$setter() {
            }
        }
        final getterN1$setter getterN1$setter = new getterN1$setter();
        
        final class getterN2$getter {
            
            long getGetterN2() {
                return n2.getN2();
            }
            
            private getterN2$getter() {
            }
        }
        final getterN2$getter getterN2$getter = new getterN2$getter();
        
        final class getterN2$setter {
            private long value;
            
            void setGetterN2(long getterN2) {
                n2.setN2(getterN2);
            }
            
            private getterN2$setter() {
            }
        }
        final getterN2$setter getterN2$setter = new getterN2$setter();
        
        final class getterI1$getter {
            
            long getGetterI1() {
                return i1.getI1();
            }
            
            private getterI1$getter() {
            }
        }
        final getterI1$getter getterI1$getter = new getterI1$getter();
        
        final class getterI1$setter {
            private long value;
            
            void setGetterI1(long getterI1) {
                i1.setI1(getterI1);
            }
            
            private getterI1$setter() {
            }
        }
        final getterI1$setter getterI1$setter = new getterI1$setter();
        (
            let
                long $ceylontmpop64 = getterN1$getter.getGetterN1()
            in {
                getterN1$setter.setGetterN1($ceylontmpop64 + 1);
            }
            returning $ceylontmpop64
        );
        (
            let
                long $ceylontmpop65 = getterN1$getter.getGetterN1() + 1
            in {
                getterN1$setter.setGetterN1($ceylontmpop65);
            }
            returning $ceylontmpop65
        );
        (
            let
                long $ceylontmpop66 = getterN1$getter.getGetterN1()
            in {
                getterN1$setter.setGetterN1($ceylontmpop66 - 1);
            }
            returning $ceylontmpop66
        );
        (
            let
                long $ceylontmpop67 = getterN1$getter.getGetterN1() - 1
            in {
                getterN1$setter.setGetterN1($ceylontmpop67);
            }
            returning $ceylontmpop67
        );
        getterI1$setter.setGetterI1(getterN1$getter.getGetterN1());
        getterI1$setter.setGetterI1(-getterN1$getter.getGetterN1());
        getterN1$setter.setGetterN1(getterN1$getter.getGetterN1() + getterN2$getter.getGetterN2());
        getterI1$setter.setGetterI1(getterN1$getter.getGetterN1() - getterN2$getter.getGetterN2());
        getterN1$setter.setGetterN1(getterN1$getter.getGetterN1() * getterN2$getter.getGetterN2());
        getterN1$setter.setGetterN1(getterN1$getter.getGetterN1() / getterN2$getter.getGetterN2());
        getterN1$setter.setGetterN1(getterN1$getter.getGetterN1() % getterN2$getter.getGetterN2());
        getterN1$setter.setGetterN1(.ceylon.language.Integer.instance(getterN1$getter.getGetterN1()).power(.ceylon.language.Integer.instance(getterN2$getter.getGetterN2())).longValue());
        (
            let
                long $ceylontmpop68 = getterN1$getter.getGetterN1() + getterN2$getter.getGetterN2()
            in {
                getterN1$setter.setGetterN1($ceylontmpop68);
            }
            returning $ceylontmpop68
        );
        (
            let
                long $ceylontmpop69 = getterN1$getter.getGetterN1() * getterN1$getter.getGetterN1()
            in {
                getterN1$setter.setGetterN1($ceylontmpop69);
            }
            returning $ceylontmpop69
        );
        (
            let
                long $ceylontmpop70 = getterN1$getter.getGetterN1() / getterN2$getter.getGetterN2()
            in {
                getterN1$setter.setGetterN1($ceylontmpop70);
            }
            returning $ceylontmpop70
        );
        (
            let
                long $ceylontmpop71 = getterN1$getter.getGetterN1() % getterN2$getter.getGetterN2()
            in {
                getterN1$setter.setGetterN1($ceylontmpop71);
            }
            returning $ceylontmpop71
        );
    }
    
    private final void boxedLocals() {
        .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger n1 = initN;
        .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger n2 = initN;
        .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger i1 = initI;
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop72 = n1
            in {
                n1 = $ceylontmpop72.getSuccessor();
            }
            returning $ceylontmpop72
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop73 = n1.getSuccessor()
            in {
                n1 = $ceylontmpop73;
            }
            returning $ceylontmpop73
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop74 = n1
            in {
                n1 = $ceylontmpop74.getPredecessor();
            }
            returning $ceylontmpop74
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop75 = n1.getPredecessor()
            in {
                n1 = $ceylontmpop75;
            }
            returning $ceylontmpop75
        );
        i1 = n1.getPositiveValue();
        i1 = n1.getNegativeValue();
        n1 = n1.plus(n2);
        i1 = n1.minus(n2);
        n1 = n1.times(n2);
        n1 = n1.divided(n2);
        n1 = n1.remainder(n2);
        n1 = n1.power(n2);
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop76 = n1.plus(n2)
            in {
                n1 = $ceylontmpop76;
            }
            returning $ceylontmpop76
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop77 = n1.times(n1)
            in {
                n1 = $ceylontmpop77;
            }
            returning $ceylontmpop77
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop78 = n1.divided(n2)
            in {
                n1 = $ceylontmpop78;
            }
            returning $ceylontmpop78
        );
        (
            let
                .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger $ceylontmpop79 = n1.remainder(n2)
            in {
                n1 = $ceylontmpop79;
            }
            returning $ceylontmpop79
        );
    }
    
    private final void unboxedToplevel() {
        (
            let
                long $ceylontmpop80 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1($ceylontmpop80 + 1);
            }
            returning $ceylontmpop80
        );
        (
            let
                long $ceylontmpop81 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() + 1
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1($ceylontmpop81);
            }
            returning $ceylontmpop81
        );
        (
            let
                long $ceylontmpop82 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1($ceylontmpop82 - 1);
            }
            returning $ceylontmpop82
        );
        (
            let
                long $ceylontmpop83 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() - 1
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1($ceylontmpop83);
            }
            returning $ceylontmpop83
        );
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelI1.setToplevelI1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelI1.setToplevelI1(-.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() + .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.getToplevelN2());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelI1.setToplevelI1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() - .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.getToplevelN2());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() * .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.getToplevelN2());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() / .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.getToplevelN2());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() % .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.getToplevelN2());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1(.ceylon.language.Integer.instance(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1()).power(.ceylon.language.Integer.instance(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.getToplevelN2())).longValue());
        (
            let
                long $ceylontmpop84 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() + .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.getToplevelN2()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1($ceylontmpop84);
            }
            returning $ceylontmpop84
        );
        (
            let
                long $ceylontmpop85 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() * .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1($ceylontmpop85);
            }
            returning $ceylontmpop85
        );
        (
            let
                long $ceylontmpop86 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() / .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.getToplevelN2()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1($ceylontmpop86);
            }
            returning $ceylontmpop86
        );
        (
            let
                long $ceylontmpop87 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1() % .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.getToplevelN2()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1($ceylontmpop87);
            }
            returning $ceylontmpop87
        );
    }
    
    private final void unboxedToplevelGetter() {
        (
            let
                long $ceylontmpop88 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1($ceylontmpop88 + 1);
            }
            returning $ceylontmpop88
        );
        (
            let
                long $ceylontmpop89 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() + 1
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1($ceylontmpop89);
            }
            returning $ceylontmpop89
        );
        (
            let
                long $ceylontmpop90 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1($ceylontmpop90 - 1);
            }
            returning $ceylontmpop90
        );
        (
            let
                long $ceylontmpop91 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() - 1
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1($ceylontmpop91);
            }
            returning $ceylontmpop91
        );
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterI1.setToplevelGetterI1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterI1.setToplevelGetterI1(-.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() + .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2.getToplevelGetterN2());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterI1.setToplevelGetterI1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() - .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2.getToplevelGetterN2());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() * .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2.getToplevelGetterN2());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() / .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2.getToplevelGetterN2());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() % .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2.getToplevelGetterN2());
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1(.ceylon.language.Integer.instance(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1()).power(.ceylon.language.Integer.instance(.com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2.getToplevelGetterN2())).longValue());
        (
            let
                long $ceylontmpop92 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() + .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2.getToplevelGetterN2()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1($ceylontmpop92);
            }
            returning $ceylontmpop92
        );
        (
            let
                long $ceylontmpop93 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() * .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1($ceylontmpop93);
            }
            returning $ceylontmpop93
        );
        (
            let
                long $ceylontmpop94 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() / .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2.getToplevelGetterN2()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1($ceylontmpop94);
            }
            returning $ceylontmpop94
        );
        (
            let
                long $ceylontmpop95 = .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.getToplevelGetterN1() % .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN2.getToplevelGetterN2()
            in {
                .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelGetterN1.setToplevelGetterN1($ceylontmpop95);
            }
            returning $ceylontmpop95
        );
    }
    
    ArithmeticOperators(.com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger initN, .com.redhat.ceylon.compiler.java.test.expression.operator.MyInteger initI) {
        this.initN = initN;
        this.initI = initI;
        this.n1 = 0L;
        this.n2 = 0L;
        this.i1 = 0L;
        this.boxedN1 = initN;
        this.boxedN2 = initN;
        this.boxedI1 = initI;
    }
}
final class toplevelGetterN1 {
    
    static long getToplevelGetterN1() {
        return .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.getToplevelN1();
    }
    
    static void setToplevelGetterN1(long toplevelGetterN1) {
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN1.setToplevelN1(toplevelGetterN1);
    }
    
    private toplevelGetterN1() {
    }
}
final class toplevelGetterN2 {
    
    static long getToplevelGetterN2() {
        return .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.getToplevelN2();
    }
    
    static void setToplevelGetterN2(long toplevelGetterN2) {
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelN2.setToplevelN2(toplevelGetterN2);
    }
    
    private toplevelGetterN2() {
    }
}
final class toplevelGetterI1 {
    
    static long getToplevelGetterI1() {
        return .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelI1.getToplevelI1();
    }
    
    static void setToplevelGetterI1(long toplevelGetterI1) {
        .com.redhat.ceylon.compiler.java.test.expression.operator.toplevelI1.setToplevelI1(toplevelGetterI1);
    }
    
    private toplevelGetterI1() {
    }
}