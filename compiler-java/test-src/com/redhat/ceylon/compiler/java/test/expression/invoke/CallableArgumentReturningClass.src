package com.redhat.ceylon.compiler.java.test.expression.invoke;

class CallableArgumentReturningClass {
    
    CallableArgumentReturningClass() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentReturningClass();
    }
}
final class callableArgumentReturningClass_f {
    
    private callableArgumentReturningClass_f() {
    }
    
    static void callableArgumentReturningClass_f(final .ceylon.language.Callable<? extends .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentReturningClass> foo) {
    }
}
final class callableArgumentReturningClass_m {
    
    private callableArgumentReturningClass_m() {
    }
    
    static void callableArgumentReturningClass_m() {
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentReturningClass_f.callableArgumentReturningClass_f(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentReturningClass>("ceylon.language.Callable<com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentReturningClass>"){
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentReturningClass $call() {
                return new .com.redhat.ceylon.compiler.java.test.expression.invoke.CallableArgumentReturningClass();
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentReturningClass_m.callableArgumentReturningClass_m();
    }
}