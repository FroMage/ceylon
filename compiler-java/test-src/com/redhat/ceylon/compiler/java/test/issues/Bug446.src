package com.redhat.ceylon.compiler.java.test.issues;

abstract class Bug446<T> implements .ceylon.language.List<T> {
    private final .ceylon.language.List$impl<T> $List$impl;
    private final .ceylon.language.Collection$impl<T> $Collection$impl;
    private final .ceylon.language.Iterable$impl<T> $Iterable$impl;
    private final .ceylon.language.Container$impl $Container$impl;
    private final .ceylon.language.Sized$impl $Sized$impl;
    private final .ceylon.language.Category$impl $Category$impl;
    
    @.java.lang.Override
    public final .ceylon.language.Iterable<? extends .java.lang.Object> containsEvery$elements() {
        return $Category$impl.containsEvery$elements();
    }
    
    @.java.lang.Override
    public final boolean containsEvery() {
        return $Category$impl.containsEvery();
    }
    
    @.java.lang.Override
    public final .ceylon.language.Iterable<? extends .java.lang.Object> containsAny$elements() {
        return $Category$impl.containsAny$elements();
    }
    
    @.java.lang.Override
    public final boolean containsAny() {
        return $Category$impl.containsAny();
    }
    private final .ceylon.language.Cloneable$impl<.ceylon.language.Collection<? extends T>> $Cloneable$impl;
    private final .ceylon.language.Correspondence$impl<.ceylon.language.Integer, T> $Correspondence$impl;
    
    @.java.lang.Override
    public final .ceylon.language.Iterable<? extends .ceylon.language.Integer> definesEvery$keys() {
        return $Correspondence$impl.definesEvery$keys();
    }
    
    @.java.lang.Override
    public final boolean definesEvery() {
        return $Correspondence$impl.definesEvery();
    }
    
    @.java.lang.Override
    public final .ceylon.language.Iterable<? extends .ceylon.language.Integer> definesAny$keys() {
        return $Correspondence$impl.definesAny$keys();
    }
    
    @.java.lang.Override
    public final boolean definesAny() {
        return $Correspondence$impl.definesAny();
    }
    
    @.java.lang.Override
    public final .ceylon.language.Iterable<? extends .ceylon.language.Integer> items$keys() {
        return $Correspondence$impl.items$keys();
    }
    
    @.java.lang.Override
    public final .ceylon.language.Iterable<? extends T> items() {
        return $Correspondence$impl.items();
    }
    private final .ceylon.language.Ranged$impl<.ceylon.language.Integer, .ceylon.language.List<? extends T>> $Ranged$impl;
    
    @.java.lang.Override
    public final .ceylon.language.Iterable<? extends T> items(final .ceylon.language.Iterable<? extends .ceylon.language.Integer> keys) {
        return .ceylon.language.bottom.getBottom();
    }
    private final .java.lang.String string;
    
    @.java.lang.Override
    public final .java.lang.String toString() {
        return string;
    }
    private final int hash;
    
    @.java.lang.Override
    public final int hashCode() {
        return hash;
    }
    
    @.java.lang.Override
    public final boolean equals(final .java.lang.Object that) {
        return ((.ceylon.language.Boolean).ceylon.language.bottom.getBottom()).booleanValue();
    }
    
    Bug446() {
        this.$List$impl = new .ceylon.language.List$impl<T>(this);
        this.$Collection$impl = new .ceylon.language.Collection$impl<T>(this);
        this.$Iterable$impl = new .ceylon.language.Iterable$impl<T>(this);
        this.$Container$impl = new .ceylon.language.Container$impl(this);
        this.$Sized$impl = new .ceylon.language.Sized$impl(this);
        this.$Category$impl = new .ceylon.language.Category$impl(this);
        this.$Cloneable$impl = new .ceylon.language.Cloneable$impl<.ceylon.language.Collection<? extends T>>(this);
        this.$Correspondence$impl = new .ceylon.language.Correspondence$impl<.ceylon.language.Integer, T>(this);
        this.$Ranged$impl = new .ceylon.language.Ranged$impl<.ceylon.language.Integer, .ceylon.language.List<? extends T>>(this);
        this.string = ((.ceylon.language.String).ceylon.language.bottom.getBottom()).toString();
        this.hash = (int)1L;
    }
}