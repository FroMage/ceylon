package com.redhat.ceylon.compiler.java.test.structure.nesting;

class C1 {
    
    static final long $init$i() {
        return 1L;
    }
    
    C1() {
        (
            let
                long $ceylontmp$i$1 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C1.$init$i()
            in {
                this($ceylontmp$i$1);
            }
            returning null
        );
    }
    
    C1(long i) {
    }
}
class C3 {
    
    static final long $init$i() {
        return 1L;
    }
    
    static final long $init$n(final long i) {
        return 2L * i;
    }
    
    C3() {
        (
            let
                long $ceylontmp$i$3 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C3.$init$i(),
                long $ceylontmp$n$4 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C3.$init$n($ceylontmp$i$3)
            in {
                this($ceylontmp$i$3, $ceylontmp$n$4);
            }
            returning null
        );
    }
    
    C3(final long i) {
        (
            let
                long $ceylontmp$n$6 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C3.$init$n(i)
            in {
                this(i, $ceylontmp$n$6);
            }
            returning null
        );
    }
    
    C3(long i, long n) {
    }
}
class C4 {
    
    static final long $init$n(final long i) {
        return 2L * i;
    }
    
    C4(final long i) {
        (
            let
                long $ceylontmp$n$8 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C4.$init$n(i)
            in {
                this(i, $ceylontmp$n$8);
            }
            returning null
        );
    }
    
    C4(long i, long n) {
    }
}
class C5<U> {
    
    static final <U>U $init$u(final long i) {
        return null;
    }
    
    C5(final long i) {
        (
            let
                U $ceylontmp$u$10 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C5.<U>$init$u(i)
            in {
                this(i, $ceylontmp$u$10);
            }
            returning null
        );
    }
    
    C5(long i, U u) {
    }
}
final class positional {
    
    private positional() {
    }
    
    static void positional() {
        new .com.redhat.ceylon.compiler.java.test.structure.nesting.C1();
        new .com.redhat.ceylon.compiler.java.test.structure.nesting.C1(1L);
        new .com.redhat.ceylon.compiler.java.test.structure.nesting.C3();
        new .com.redhat.ceylon.compiler.java.test.structure.nesting.C3(1L);
        new .com.redhat.ceylon.compiler.java.test.structure.nesting.C3(1L, 2L);
        new .com.redhat.ceylon.compiler.java.test.structure.nesting.C4(1L);
        new .com.redhat.ceylon.compiler.java.test.structure.nesting.C4(1L, 2L);
        new .com.redhat.ceylon.compiler.java.test.structure.nesting.C5<.ceylon.language.String>(1L);
        new .com.redhat.ceylon.compiler.java.test.structure.nesting.C5<.ceylon.language.String>(1L, .ceylon.language.String.instance(""));
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.structure.nesting.positional.positional();
    }
}
final class named {
    
    private named() {
    }
    
    static void named() {
        (
            let
                long $arg$11$0 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C1.$init$i()
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C1($arg$11$0)
        );
        (
            let
                long $arg$12$0 = 1L
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C1($arg$12$0)
        );
        (
            let
                long $arg$13$0 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C3.$init$i(),
                long $arg$13$1 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C3.$init$n($arg$13$0)
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C3($arg$13$0, $arg$13$1)
        );
        (
            let
                long $arg$14$0 = 10L,
                long $arg$14$1 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C3.$init$n($arg$14$0)
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C3($arg$14$0, $arg$14$1)
        );
        (
            let
                long $arg$15$0 = 10L,
                long $arg$15$1 = 20L
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C3($arg$15$0, $arg$15$1)
        );
        (
            let
                long $arg$16$1 = 20L,
                long $arg$16$0 = 10L
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C3($arg$16$0, $arg$16$1)
        );
        (
            let
                long $arg$17$1 = 10L,
                long $arg$17$0 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C3.$init$i()
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C3($arg$17$0, $arg$17$1)
        );
        (
            let
                long $arg$18$1 = 20L,
                long $arg$18$0 = 10L
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C4($arg$18$0, $arg$18$1)
        );
        (
            let
                long $arg$19$0 = 10L,
                long $arg$19$1 = 20L
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C4($arg$19$0, $arg$19$1)
        );
        (
            let
                long $arg$20$0 = 10L,
                .ceylon.language.String $arg$20$1 = .com.redhat.ceylon.compiler.java.test.structure.nesting.C5.$init$u($arg$20$0)
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C5<.ceylon.language.String>($arg$20$0, $arg$20$1)
        );
        (
            let
                long $arg$21$0 = 10L,
                .ceylon.language.String $arg$21$1 = .ceylon.language.String.instance("")
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C5<.ceylon.language.String>($arg$21$0, $arg$21$1)
        );
        (
            let
                .ceylon.language.String $arg$22$1 = .ceylon.language.String.instance(""),
                long $arg$22$0 = 10L
            returning new .com.redhat.ceylon.compiler.java.test.structure.nesting.C5<.ceylon.language.String>($arg$22$0, $arg$22$1)
        );
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.structure.nesting.named.named();
    }
}