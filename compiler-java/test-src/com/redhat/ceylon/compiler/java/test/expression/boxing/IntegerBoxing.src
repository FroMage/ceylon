package com.redhat.ceylon.compiler.java.test.expression.boxing;

class IntegerBoxing {
    private long attrInteger;
    
    private final long getAttrInteger() {
        return attrInteger;
    }
    
    private final void setAttrInteger(long attrInteger) {
        this.attrInteger = attrInteger;
    }
    
    private final <T>T id(final T x) {
        return x;
    }
    
    private final void m() {
        long localAttrInteger = 1L;
        long localAttrOptionalInteger = 1L;
        .java.lang.Object localAttrObject = .ceylon.language.Integer.instance(1L);
        localAttrInteger = localAttrInteger;
        localAttrOptionalInteger = localAttrInteger;
        localAttrObject = .ceylon.language.Integer.instance(localAttrInteger);
        localAttrInteger = <ceylon.language.Integer>id(.ceylon.language.Integer.instance(1L)).longValue();
        localAttrOptionalInteger = <ceylon.language.Integer>id(.ceylon.language.Integer.instance(1L)).longValue();
        localAttrObject = <ceylon.language.Integer>id(.ceylon.language.Integer.instance(1L));
        final .java.lang.Object localAttrConstantObject = .ceylon.language.Integer.instance(localAttrInteger);
        final long localAttrConstantInteger = localAttrInteger;
        .java.lang.Object $localAttrConstantObject$0;
        if (($localAttrConstantObject$0 = localAttrConstantObject) instanceof ceylon.language.Integer) {
            final long $localAttrConstantObject$1 = ((ceylon.language.Integer)$localAttrConstantObject$0).longValue();
            localAttrInteger = $localAttrConstantObject$1;
        }
        localAttrInteger = localAttrInteger + 2L;
        localAttrObject = .ceylon.language.Integer.instance(localAttrInteger + 2L);
        setAttrInteger(getAttrInteger() + 2L);
        test(localAttrInteger + 2L);
        test(getAttrInteger() + 2L);
        test(this.getAttrInteger() + 2L);
        localAttrInteger = .ceylon.language.Integer.instance(localAttrInteger).plus(.ceylon.language.Integer.instance(2L)).longValue();
        setAttrInteger(.ceylon.language.Integer.instance(getAttrInteger()).plus(.ceylon.language.Integer.instance(2L)).longValue());
        this.setAttrInteger(.ceylon.language.Integer.instance(this.getAttrInteger()).plus(.ceylon.language.Integer.instance(2L)).longValue());
        test(.ceylon.language.Integer.instance(localAttrInteger).plus(.ceylon.language.Integer.instance(2L)).longValue());
        test(.ceylon.language.Integer.instance(getAttrInteger()).plus(.ceylon.language.Integer.instance(2L)).longValue());
        test(.ceylon.language.Integer.instance(this.getAttrInteger()).plus(.ceylon.language.Integer.instance(2L)).longValue());
        localAttrInteger = localAttrInteger++;
        setAttrInteger((let long $ceylontmpop2 = getAttrInteger() in setAttrInteger($ceylontmpop2 + 1); $ceylontmpop2));
        this.setAttrInteger((let com.redhat.ceylon.compiler.java.test.expression.boxing.IntegerBoxing $ceylontmpopE3 = this,long $ceylontmpopV4 = $ceylontmpopE3.getAttrInteger() in $ceylontmpopE3.setAttrInteger($ceylontmpopV4 + 1); $ceylontmpopV4));
        test(localAttrInteger++);
        test((let long $ceylontmpop5 = getAttrInteger() in setAttrInteger($ceylontmpop5 + 1); $ceylontmpop5));
        test((let com.redhat.ceylon.compiler.java.test.expression.boxing.IntegerBoxing $ceylontmpopE6 = this,long $ceylontmpopV7 = $ceylontmpopE6.getAttrInteger() in $ceylontmpopE6.setAttrInteger($ceylontmpopV7 + 1); $ceylontmpopV7));
        localAttrInteger = .ceylon.language.Integer.instance(localAttrInteger).getSuccessor().longValue();
        setAttrInteger(.ceylon.language.Integer.instance(getAttrInteger()).getSuccessor().longValue());
        this.setAttrInteger(.ceylon.language.Integer.instance(this.getAttrInteger()).getSuccessor().longValue());
        test(.ceylon.language.Integer.instance(localAttrInteger).getSuccessor().longValue());
        test(.ceylon.language.Integer.instance(getAttrInteger()).getSuccessor().longValue());
        test(.ceylon.language.Integer.instance(this.getAttrInteger()).getSuccessor().longValue());
    }
    
    private final void test(final long i) {
    }
    
    IntegerBoxing() {
        this.attrInteger = 1L;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.expression.boxing.IntegerBoxing();
    }
}