package com.redhat.ceylon.compiler.test.expression.operator;

public class NullHandlingOperators {
    private boolean b1;
    
    private final boolean getB1() {
        return this.b1;
    }
    
    private final void setB1(boolean b1) {
        this.b1 = b1;
    }
    private long n1;
    
    private final long getN1() {
        return this.n1;
    }
    
    private final void setN1(long n1) {
        this.n1 = n1;
    }
    private long n2;
    
    private final long getN2() {
        return this.n2;
    }
    
    private final void setN2(long n2) {
        this.n2 = n2;
    }
    private ceylon.language.Natural nat;
    
    private final ceylon.language.Natural getNat() {
        return this.nat;
    }
    
    private final void setNat(ceylon.language.Natural nat) {
        this.nat = nat;
    }
    private ceylon.language.Integer int;
    
    private final ceylon.language.Integer getInt() {
        return this.int;
    }
    
    private final void setInt(ceylon.language.Integer int) {
        this.int = int;
    }
    
    private final void nullHandling(final ceylon.language.Iterable<? extends ceylon.language.Natural> seq) {
        // TODO b1 := nat exists;
        // TODO b1 := seq nonempty;
        // TODO n1 := nat ? n2;
        // TODO nat ?= n1;
        ceylon.language.Integer nullSafeMember = getInt() != null ? getInt().getNegativeValue() : null;
        ceylon.language.Integer nullSafeInvoke = getInt() != null ? getInt().plus(.ceylon.language.Integer.instance(1)) : null;
        // TODO nullSafeInvoke := int?.plus{
        //     that = +1;
        // };
    }
    
    public NullHandlingOperators() {
        this.b1 = false;
        this.n1 = 0L;
        this.n2 = 0L;
        this.nat = .ceylon.language.Natural.instance(0L);
        int i1 = 0;
        int i2 = 0;
        this.int = .ceylon.language.Integer.instance(0);
    }
}