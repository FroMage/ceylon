package com.redhat.ceylon.compiler.test.expression.operator;

public class NullHandlingOperators {
    
    private final <T>T box(final T t) {
        return t;
    }
    
    private final void nullHandling() {
        final ceylon.language.Integer natOrNothing1 = .ceylon.language.Integer.instance(0L);
        final ceylon.language.Integer intOrNothing = .ceylon.language.Integer.instance(0L);
        final long n = (let ceylon.language.Integer $ceylontmp0 = natOrNothing1 in $ceylontmp0 != null ? $ceylontmp0 : .ceylon.language.Integer.instance(2L)).longValue();
        final ceylon.language.Integer nBoxed = (let ceylon.language.Integer $ceylontmp1 = natOrNothing1 in $ceylontmp1 != null ? $ceylontmp1 : <ceylon.language.Integer>box(.ceylon.language.Integer.instance(0L)));
        ceylon.language.Integer nullSafeMember = (let ceylon.language.Integer $safe$2 = intOrNothing in $safe$2 != null ? $safe$2.getNegativeValue() : null);
        ceylon.language.Integer nullSafeInvoke = (let ceylon.language.Integer $safe$3 = intOrNothing in $safe$3 != null ? $safe$3.plus(.ceylon.language.Integer.instance(1L)) : null);
        nullSafeInvoke = (let ceylon.language.Integer $safe$5 = intOrNothing in $safe$5 != null ? (let ceylon.language.Integer $arg$4$callable$ = $safe$5,ceylon.language.Integer $arg$4$0 = .ceylon.language.Integer.instance(1L) in $arg$4$callable$.plus($arg$4$0)) : null);
        final ceylon.language.Iterable<? extends ceylon.language.String> s1 = null;
        final ceylon.language.Iterable<? extends ceylon.language.String> s2 = (let ceylon.language.Iterable<? extends ceylon.language.String> $ceylontmp6 = s1 in $ceylontmp6 != null ? $ceylontmp6 : ceylon.language.$empty.getEmpty());
        final long nn = (let ceylon.language.Integer $ceylontmp7 = null in $ceylontmp7 != null ? $ceylontmp7 : .ceylon.language.Integer.instance(2L)).longValue();
    }
    
    private final void testEmpty() {
        boolean sync = false;
        sync = .ceylon.language.String.instance("").getCharacters() instanceof ceylon.language.Sequence;
        final .java.lang.Object foo = .ceylon.language.Boolean.instance(sync);
        sync = foo instanceof ceylon.language.Sequence;
        sync = ceylon.language.$empty.getEmpty() instanceof ceylon.language.Sequence;
        final ceylon.language.Iterable<? extends ceylon.language.String> iter = ceylon.language.$empty.getEmpty();
        sync = iter instanceof ceylon.language.Sequence;
        final ceylon.language.Iterable<? extends ceylon.language.String> seq = ceylon.language.$empty.getEmpty();
        sync = seq instanceof ceylon.language.Sequence;
        final ceylon.language.Boolean boxed = .ceylon.language.Boolean.instance(seq instanceof ceylon.language.Sequence);
    }
    
    private final void testExists() {
        boolean sync = false;
        final .java.lang.Object foo = .ceylon.language.Boolean.instance(sync);
        sync = foo != null;
        final ceylon.language.Boolean boxed = .ceylon.language.Boolean.instance(foo != null);
    }
    
    private final void testThenElse() {
        final long n = 5L;
        final ceylon.language.String foo = .ceylon.language.Integer.instance(n).compare(.ceylon.language.Integer.instance(0L)).largerThan() ? .ceylon.language.String.instance("yes") : null;
        final ceylon.language.String bar = (let ceylon.language.String $ceylontmp8 = foo in $ceylontmp8 != null ? $ceylontmp8 : .ceylon.language.String.instance("yes"));
        final ceylon.language.String baz = (let ceylon.language.String $ceylontmp9 = .ceylon.language.Integer.instance(n).compare(.ceylon.language.Integer.instance(0L)).largerThan() ? .ceylon.language.String.instance("yes") : null in $ceylontmp9 != null ? $ceylontmp9 : .ceylon.language.String.instance("no"));
        final double x = 5.0;
        final double y = (let ceylon.language.Float $ceylontmp10 = .ceylon.language.Float.instance(x).compare(.ceylon.language.Float.instance(0.0)).largerThan() ? .ceylon.language.Float.instance(x) : null in $ceylontmp10 != null ? $ceylontmp10 : .ceylon.language.Float.instance(1.0)).doubleValue();
    }
    
    public NullHandlingOperators() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new NullHandlingOperators();
    }
}