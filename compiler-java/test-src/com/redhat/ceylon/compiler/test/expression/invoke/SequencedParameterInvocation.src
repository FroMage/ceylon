package com.redhat.ceylon.compiler.test.expression.invoke;

class SequencedParameterInvocation {
    
    private final void m(final .java.lang.String a, final ceylon.language.Iterable<? extends ceylon.language.Natural> i) {
    }
    
    private final void m2(final .java.lang.String a, final ceylon.language.Iterable<? extends com.redhat.ceylon.compiler.test.expression.invoke.SequencedParameterInvocation> i) {
    }
    
    private final void f() {
        m("foo", ceylon.language.$empty.getEmpty());
        m("foo", new ceylon.language.ArraySequence<ceylon.language.Natural>(.ceylon.language.Natural.instance(1L), .ceylon.language.Natural.instance(2L), .ceylon.language.Natural.instance(3L)));
        m2("foo", new ceylon.language.ArraySequence<com.redhat.ceylon.compiler.test.expression.invoke.SequencedParameterInvocation>(this, this, this));
    }
    
    SequencedParameterInvocation() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new SequencedParameterInvocation();
    }
}