package com.redhat.ceylon.compiler.test.expression.invoke;

class NamedArgumentInvocation {
    
    private final boolean f(final long n, final .java.lang.String s) {
        return true;
    }
    
    private final void v(final long n, final .java.lang.String s) {
    }
    
    private final boolean simple1() {
        (let .java.lang.String $arg$0$1 = "foo",long $arg$0$0 = 1L in v($arg$0$0, $arg$0$1); null);
        return (let .java.lang.String $arg$1$1 = "foo",long $arg$1$0 = 1L in f($arg$1$0, $arg$1$1));
    }
    
    private final boolean simple2() {
        (let com.redhat.ceylon.compiler.test.expression.invoke.NamedArgumentInvocation $call$3 = this,.java.lang.String $arg$2$1 = "bar",long $arg$2$0 = 2L in $call$3.v($arg$2$0, $arg$2$1); null);
        return (let com.redhat.ceylon.compiler.test.expression.invoke.NamedArgumentInvocation $call$5 = this,.java.lang.String $arg$4$1 = "bar",long $arg$4$0 = 2L in $call$5.f($arg$4$0, $arg$4$1));
    }
    
    private final boolean qualified() {
        (let com.redhat.ceylon.compiler.test.expression.invoke.NamedArgumentInvocation $call$7 = new com.redhat.ceylon.compiler.test.expression.invoke.NamedArgumentInvocation(),.java.lang.String $arg$6$1 = "bar",long $arg$6$0 = 2L in $call$7.v($arg$6$0, $arg$6$1); null);
        return (let com.redhat.ceylon.compiler.test.expression.invoke.NamedArgumentInvocation $call$9 = new com.redhat.ceylon.compiler.test.expression.invoke.NamedArgumentInvocation(),.java.lang.String $arg$8$1 = "bar",long $arg$8$0 = 2L in $call$9.f($arg$8$0, $arg$8$1));
    }
    
    NamedArgumentInvocation() {
        (let .java.lang.String $arg$10$1 = "foo",long $arg$10$0 = 0L in v($arg$10$0, $arg$10$1); null);
        (let .java.lang.String $arg$11$1 = "foo",long $arg$11$0 = 0L in f($arg$11$0, $arg$11$1));
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new NamedArgumentInvocation();
    }
}