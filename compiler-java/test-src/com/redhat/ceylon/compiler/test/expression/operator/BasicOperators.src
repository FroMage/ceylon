package com.redhat.ceylon.compiler.test.expression.operator;

interface BasicOperatorsA {
}
interface BasicOperatorsB {
}
public class BasicOperators {
    
    private final void testIs() {
        boolean sync = false;
        final .java.lang.Object foo = .ceylon.language.Boolean.instance(sync);
        sync = .ceylon.language.Boolean.instance(sync) instanceof ceylon.language.Boolean;
        sync = foo instanceof ceylon.language.Boolean;
        sync = foo == null;
        sync = (let .java.lang.Object $ceylontmp0 = foo in false);
        sync = (let .java.lang.Object $ceylontmp1 = foo in true);
        sync = foo instanceof .java.lang.Object;
    }
    
    private final void testEmpty() {
        boolean sync = false;
        sync = .ceylon.language.String.instance("").getCharacters() instanceof ceylon.language.Sequence;
        final .java.lang.Object foo = .ceylon.language.Boolean.instance(sync);
        sync = foo instanceof ceylon.language.Sequence;
        sync = ceylon.language.$empty.getEmpty() instanceof ceylon.language.Sequence;
        final ceylon.language.Iterable<? extends ceylon.language.String> iter = ceylon.language.$empty.getEmpty();
        sync = iter instanceof ceylon.language.Sequence;
        final ceylon.language.Iterable<? extends ceylon.language.String> seq = ceylon.language.$empty.getEmpty();
        sync = seq instanceof ceylon.language.Sequence;
    }
    
    private final void testExists() {
        boolean sync = false;
        final .java.lang.Object foo = .ceylon.language.Boolean.instance(sync);
        sync = foo != null;
    }
    
    public BasicOperators() {
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new BasicOperators();
    }
}