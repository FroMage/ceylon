package com.redhat.ceylon.compiler.test.expression.operator;

public class LogicalOperators {
    private boolean b1;
    
    private final boolean getB1() {
        return this.b1;
    }
    
    private final void setB1(boolean b1) {
        this.b1 = b1;
    }
    private boolean b2;
    
    private final boolean getB2() {
        return this.b2;
    }
    
    private final void setB2(boolean b2) {
        this.b2 = b2;
    }
    
    private final void logical() {
        setB1(!getB2());
        setB1(true || getB2());
        setB1(false && getB2());
        (let boolean $ceylontmpop0 = getB1() || getB2() in setB1($ceylontmpop0); $ceylontmpop0);
        (let boolean $ceylontmpop1 = getB1() && getB2() in setB1($ceylontmpop1); $ceylontmpop1);
        (let com.redhat.ceylon.compiler.test.expression.operator.LogicalOperators $ceylontmpopE2 = this,boolean $ceylontmpopV3 = $ceylontmpopE2.getB1() || this.getB2() in $ceylontmpopE2.setB1($ceylontmpopV3); $ceylontmpopV3);
        (let com.redhat.ceylon.compiler.test.expression.operator.LogicalOperators $ceylontmpopE4 = this,boolean $ceylontmpopV5 = $ceylontmpopE4.getB1() && this.getB2() in $ceylontmpopE4.setB1($ceylontmpopV5); $ceylontmpopV5);
    }
    
    public LogicalOperators() {
        this.b1 = false;
        this.b2 = false;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        new LogicalOperators();
    }
}