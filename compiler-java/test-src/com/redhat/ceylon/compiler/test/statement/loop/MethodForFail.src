package com.redhat.ceylon.compiler.test.statement.loop;

class MethodForFail extends .ceylon.language.Object {
    
    public final Natural m(final Sequence<Integer> seq) {
        boolean $ceylontmp0 = true;
        .ceylon.language.Iterator<Integer> $i$iter$1 = seq.iterator();
        while (true) {
            Integer i = $i$iter$1.head();
            if (i != null) {
                while (ceylon.language.$true.getTrue() == ceylon.language.$true.getTrue()) {
                    boolean $ceylontmp2 = true;
                    .ceylon.language.Iterator<Integer> $j$iter$3 = seq.iterator();
                    while (true) {
                        Integer j = $j$iter$3.head();
                        if (j != null) {
                            $ceylontmp2 = false;
                            break;
                        } else {
                            break;
                        }
                        $j$iter$3 = $j$iter$3.tail();
                    }
                    if ($ceylontmp2) {
                        return .ceylon.language.Natural.instance(1L);
                    }
                    break;
                }
                do {
                    break;
                }                 while (ceylon.language.$true.getTrue() == ceylon.language.$true.getTrue());
                $ceylontmp0 = false;
                break;
            } else {
                break;
            }
            $i$iter$1 = $i$iter$1.tail();
        }
        if ($ceylontmp0) {
            return .ceylon.language.Natural.instance(0L);
        }
        return .ceylon.language.Natural.instance(2L);
    }
    
    MethodForFail() {
    }
}