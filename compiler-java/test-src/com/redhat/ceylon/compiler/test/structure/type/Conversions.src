package com.redhat.ceylon.compiler.test.structure.type;

class Foo {
    
    public final void a() {
    }
    
    Foo() {
    }
    
    public static void main(.java.lang.String[] args) {
        ceylon.language.process.getProcess().setupArguments(args);
        new Foo();
    }
}
class Bar extends com.redhat.ceylon.compiler.test.structure.type.Foo {
    
    public final void b() {
    }
    
    Bar() {
        super();
    }
    
    public static void main(.java.lang.String[] args) {
        ceylon.language.process.getProcess().setupArguments(args);
        new Bar();
    }
}
class Baz extends com.redhat.ceylon.compiler.test.structure.type.Foo {
    
    public final void c() {
    }
    
    Baz() {
        super();
    }
    
    public static void main(.java.lang.String[] args) {
        ceylon.language.process.getProcess().setupArguments(args);
        new Baz();
    }
}
class GenInv<T> {
    
    public final void a() {
    }
    
    GenInv() {
    }
    
    public static void main(.java.lang.String[] args) {
        ceylon.language.process.getProcess().setupArguments(args);
        new GenInv();
    }
}
class GenCov<T> {
    
    public final void a() {
    }
    
    GenCov() {
    }
    
    public static void main(.java.lang.String[] args) {
        ceylon.language.process.getProcess().setupArguments(args);
        new GenCov();
    }
}
class GenCon<T> {
    
    public final void a() {
    }
    
    GenCon() {
    }
    
    public static void main(.java.lang.String[] args) {
        ceylon.language.process.getProcess().setupArguments(args);
        new GenCon();
    }
}
interface ISats {
    
    public abstract void a();
}
class Sats<T extends com.redhat.ceylon.compiler.test.structure.type.ISats> {
    
    public final void a() {
    }
    
    Sats() {
    }
    
    public static void main(.java.lang.String[] args) {
        ceylon.language.process.getProcess().setupArguments(args);
        new Sats();
    }
}
class ExtVoid extends com.redhat.ceylon.compiler.test.structure.type.GenInv<.java.lang.Object> {
    
    ExtVoid() {
        super();
    }
    
    public static void main(.java.lang.String[] args) {
        ceylon.language.process.getProcess().setupArguments(args);
        new ExtVoid();
    }
}
class ExtBottom extends com.redhat.ceylon.compiler.test.structure.type.GenInv {
    
    ExtBottom() {
        super();
    }
    
    public static void main(.java.lang.String[] args) {
        ceylon.language.process.getProcess().setupArguments(args);
        new ExtBottom();
    }
}
class Conversions {
    
    public final void m() {
        final com.redhat.ceylon.compiler.test.structure.type.Foo c1 = new com.redhat.ceylon.compiler.test.structure.type.Foo();
        c1.a();
        final ceylon.language.Natural n1 = .ceylon.language.Natural.instance(1L);
        final ceylon.language.Natural n2 = null;
        final .java.lang.Object u1 = new com.redhat.ceylon.compiler.test.structure.type.Bar();
        ((com.redhat.ceylon.compiler.test.structure.type.Foo)u1).a();
        final .java.lang.Object $u1$0 = u1;
        if ($u1$0 instanceof com.redhat.ceylon.compiler.test.structure.type.Bar) {
            final com.redhat.ceylon.compiler.test.structure.type.Bar $u1$1 = (com.redhat.ceylon.compiler.test.structure.type.Bar)$u1$0;
            $u1$1.a();
            $u1$1.b();
        }
        final .java.lang.Object e1;
        final .java.lang.Object e2;
        final .java.lang.Object e3;
        final .java.lang.Object e4;
        final .java.lang.Object e5;
        final .java.lang.Object e6;
        final com.redhat.ceylon.compiler.test.structure.type.GenInv<ceylon.language.String> g1;
        final com.redhat.ceylon.compiler.test.structure.type.GenCov<? extends ceylon.language.String> g2;
        final com.redhat.ceylon.compiler.test.structure.type.GenCon<? super ceylon.language.String> g3;
        final com.redhat.ceylon.compiler.test.structure.type.GenInv<ceylon.language.String> g4;
        final com.redhat.ceylon.compiler.test.structure.type.GenInv g5;
        final com.redhat.ceylon.compiler.test.structure.type.GenInv<.java.lang.Object> v1;
        final com.redhat.ceylon.compiler.test.structure.type.GenCov<?> v2;
        final com.redhat.ceylon.compiler.test.structure.type.GenCon<.java.lang.Object> v3;
        final com.redhat.ceylon.compiler.test.structure.type.GenInv b1;
        final com.redhat.ceylon.compiler.test.structure.type.GenCov b2;
        final com.redhat.ceylon.compiler.test.structure.type.GenCon<?> b3;
    }
    
    Conversions() {
    }
    
    public static void main(.java.lang.String[] args) {
        ceylon.language.process.getProcess().setupArguments(args);
        new Conversions();
    }
}