package com.redhat.ceylon.compiler.java.test.statement.loop.optim;

class ArrayIterationDynamic implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    ArrayIterationDynamic() {
    }
    
    private final void arrayOfIntegers$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$2 = array;
        final boolean isArray$3 = iterable$2 instanceof .ceylon.language.Array;
        final boolean isTuple$4 = iterable$2 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$2).$getArray$() != null;
        .java.lang.Object elem$0 = null;
        int i$5 = 0;
        final int length$6;
        if (isArray$3 || isTuple$4) {
            length$6 = (int)iterable$2.getSize();
        } else {
            length$6 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$1 = isTuple$4 || isArray$3 ? null : iterable$2.iterator();
        loop_0: while (isTuple$4 || isArray$3 ? i$5 < length$6 : !((elem$0 = element$iterator$$1.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$3 || isTuple$4) elem$0 = iterable$2.getFromFirst(i$5++);
            final long element = ((.ceylon.language.Integer)elem$0).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfCharacters$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Character, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Character, ? extends .java.lang.Object> iterable$9 = array;
        final boolean isArray$10 = iterable$9 instanceof .ceylon.language.Array;
        final boolean isTuple$11 = iterable$9 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$9).$getArray$() != null;
        .java.lang.Object elem$7 = null;
        int i$12 = 0;
        final int length$13;
        if (isArray$10 || isTuple$11) {
            length$13 = (int)iterable$9.getSize();
        } else {
            length$13 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Character> element$iterator$$8 = isTuple$11 || isArray$10 ? null : iterable$9.iterator();
        loop_1: while (isTuple$11 || isArray$10 ? i$12 < length$13 : !((elem$7 = element$iterator$$8.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$10 || isTuple$11) elem$7 = iterable$9.getFromFirst(i$12++);
            final int element = ((.ceylon.language.Character)elem$7).intValue();
            .ceylon.language.print_.print(.ceylon.language.Character.instance(element));
        }
    }
    
    private final void arrayOfObjects$priv$(final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> iterable$16 = array;
        final boolean isArray$17 = iterable$16 instanceof .ceylon.language.Array;
        final boolean isTuple$18 = iterable$16 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$16).$getArray$() != null;
        .java.lang.Object elem$14 = null;
        int i$19 = 0;
        final int length$20;
        if (isArray$17 || isTuple$18) {
            length$20 = (int)iterable$16.getSize();
        } else {
            length$20 = 0;
        }
        .ceylon.language.Iterator<? extends .java.lang.Object> element$iterator$$15 = isTuple$18 || isArray$17 ? null : iterable$16.iterator();
        loop_2: while (isTuple$18 || isArray$17 ? i$19 < length$20 : !((elem$14 = element$iterator$$15.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$17 || isTuple$18) elem$14 = iterable$16.getFromFirst(i$19++);
            final .java.lang.Object element = elem$14;
            .ceylon.language.print_.print(element);
        }
    }
    
    private final void arrayOfIntegersWithBreak$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        boolean doforelse$21 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$25 = array;
        final boolean isArray$26 = iterable$25 instanceof .ceylon.language.Array;
        final boolean isTuple$27 = iterable$25 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$25).$getArray$() != null;
        .java.lang.Object elem$22 = null;
        int i$28 = 0;
        final int length$29;
        if (isArray$26 || isTuple$27) {
            length$29 = (int)iterable$25.getSize();
        } else {
            length$29 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$23 = isTuple$27 || isArray$26 ? null : iterable$25.iterator();
        loop_3: while (isTuple$27 || isArray$26 ? i$28 < length$29 : !((elem$22 = element$iterator$$23.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$26 || isTuple$27) elem$22 = iterable$25.getFromFirst(i$28++);
            final long element = ((.ceylon.language.Integer)elem$22).longValue();
            
            final class x_ {
                
                private x_() {
                }
                
                long x() {
                    return element + 10L;
                }
            }
            final x_ x = new x_();
            if (element == 10L) {
                doforelse$21 = false;
                break loop_3;
            }
        }
        if (doforelse$21) {
            .ceylon.language.print_.print(.ceylon.language.String.instance("foo"));
        }
    }
    
    private final void keyValue$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>, ? extends .java.lang.Object> iterable$31 = array;
        final boolean isArray$32 = iterable$31 instanceof .ceylon.language.Array;
        final boolean isTuple$33 = iterable$31 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$31).$getArray$() != null;
        .java.lang.Object elem$30 = null;
        int i$34 = 0;
        final int length$35;
        if (isArray$32 || isTuple$33) {
            length$35 = (int)iterable$31.getSize();
        } else {
            length$35 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>> elem$30$iterator$ = isTuple$33 || isArray$32 ? null : iterable$31.iterator();
        loop_4: while (isTuple$33 || isArray$32 ? i$34 < length$35 : !((elem$30 = elem$30$iterator$.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$32 || isTuple$33) elem$30 = iterable$31.getFromFirst(i$34++);
            final long i = ((.ceylon.language.Integer)((.ceylon.language.Entry)elem$30).getKey()).longValue();
            final double f = ((.ceylon.language.Float)((.ceylon.language.Entry)elem$30).getItem()).doubleValue();
            .ceylon.language.print_.print(.ceylon.language.Float.instance(i + f));
        }
    }
    
    private final void arrayOfIntegersArraySequenceDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$38 = array;
        final boolean isArray$39 = iterable$38 instanceof .ceylon.language.Array;
        final boolean isTuple$40 = iterable$38 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$38).$getArray$() != null;
        .java.lang.Object elem$36 = null;
        int i$41 = 0;
        final int length$42;
        if (isArray$39 || isTuple$40) {
            length$42 = (int)iterable$38.getSize();
        } else {
            length$42 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$37 = isTuple$40 || isArray$39 ? null : iterable$38.iterator();
        loop_5: while (isTuple$40 || isArray$39 ? i$41 < length$42 : !((elem$36 = element$iterator$$37.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$39 || isTuple$40) elem$36 = iterable$38.getFromFirst(i$41++);
            final long element = ((.ceylon.language.Integer)elem$36).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfIntegersArrayDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$45 = array;
        final boolean isTuple$46 = iterable$45 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$45).$getArray$() != null;
        .java.lang.Object elem$43 = null;
        int i$47 = 0;
        final int length$48;
        if (isTuple$46) {
            length$48 = (int)iterable$45.getSize();
        } else {
            length$48 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$44 = isTuple$46 ? null : iterable$45.iterator();
        loop_6: while (isTuple$46 ? i$47 < length$48 : !((elem$43 = element$iterator$$44.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$46) elem$43 = iterable$45.getFromFirst(i$47++);
            final long element = ((.ceylon.language.Integer)elem$43).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfIntegersDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$51 = array;
        final boolean isTuple$52 = iterable$51 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$51).$getArray$() != null;
        .java.lang.Object elem$49 = null;
        int i$53 = 0;
        final int length$54;
        if (isTuple$52) {
            length$54 = (int)iterable$51.getSize();
        } else {
            length$54 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$50 = isTuple$52 ? null : iterable$51.iterator();
        loop_7: while (isTuple$52 ? i$53 < length$54 : !((elem$49 = element$iterator$$50.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$52) elem$49 = iterable$51.getFromFirst(i$53++);
            final long element = ((.ceylon.language.Integer)elem$49).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
        .java.lang.Object elem$55;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$56 = array.iterator();
        loop_8: while (!((elem$55 = element$iterator$$56.next()) instanceof .ceylon.language.Finished)) {
            final long element = ((.ceylon.language.Integer)elem$55).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.loop.optim.ArrayIterationDynamic.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.loop.optim.ArrayIterationDynamic.class);
}