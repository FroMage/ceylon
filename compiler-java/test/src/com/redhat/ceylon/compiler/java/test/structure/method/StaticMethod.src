package com.redhat.ceylon.compiler.java.test.structure.method;

class StaticMethod implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    private static final .java.lang.String nonSharedStat$priv$() {
        return "I\'m static";
    }
    
    public static final <T>.java.lang.String sharedStat(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        return (
            let
            {
                .java.lang.String $ceylontmp$s$0 = .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.<T>sharedStat$s($reified$T);
                T $ceylontmp$t$1 = .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.<T>sharedStat$t($reified$T, $ceylontmp$s$0);
            }
            returning sharedStat$canonical$($reified$T, $ceylontmp$s$0, $ceylontmp$t$1);
        );
    }
    
    public static final <T>.java.lang.String sharedStat$s(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        return "";
    }
    
    public static final <T>.java.lang.String sharedStat(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String s) {
        return (
            let
            {
                T $ceylontmp$t$2 = .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.<T>sharedStat$t($reified$T, s);
            }
            returning sharedStat$canonical$($reified$T, s, $ceylontmp$t$2);
        );
    }
    
    public static final <T>T sharedStat$t(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String s) {
        return null;
    }
    
    private static <T>.java.lang.String sharedStat$canonical$(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String s, final T t) {
        return "I\'m static";
    }
    
    public static final <T>.java.lang.String sharedStat(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String s, final T t) {
        return sharedStat$canonical$($reified$T, s, t);
    }
    
    public StaticMethod() {
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class staticMethod_ {
    
    private staticMethod_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
    static void staticMethod() {
        .java.lang.String s = .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.<.ceylon.language.Integer>sharedStat(.ceylon.language.Integer.$TypeDescriptor$);
        s = (
            let
            {
                .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor arg$3$reified$0 = .ceylon.language.Integer.$TypeDescriptor$;
                .java.lang.String arg$3$0 = .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.sharedStat$s(arg$3$reified$0);
                .ceylon.language.Integer arg$3$1 = .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.sharedStat$t(arg$3$reified$0, arg$3$0);
            }
            returning .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.<.ceylon.language.Integer>sharedStat(arg$3$reified$0, arg$3$0, arg$3$1);
        );
        s = (
            let
            {
                .java.lang.String arg$4$0 = "";
                .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor arg$4$reified$0 = .ceylon.language.Integer.$TypeDescriptor$;
                .ceylon.language.Integer arg$4$1 = .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.sharedStat$t(arg$4$reified$0, arg$4$0);
            }
            returning .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.<.ceylon.language.Integer>sharedStat(arg$4$reified$0, arg$4$0, arg$4$1);
        );
        s = (
            let
            {
                .java.lang.String arg$5$0 = "";
                .ceylon.language.Integer arg$5$1 = .ceylon.language.Integer.instance(1L);
                .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor arg$5$reified$0 = .ceylon.language.Integer.$TypeDescriptor$;
            }
            returning .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.<.ceylon.language.Integer>sharedStat(arg$5$reified$0, arg$5$0, arg$5$1);
        );
        final .ceylon.language.Callable<? extends .ceylon.language.String> ref = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, 0, .ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$)), "String(String=, Integer?=)", (short)-1){
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .ceylon.language.String $call$() {
                final .java.lang.String s = .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.sharedStat$s(.ceylon.language.Integer.$TypeDescriptor$);
                final .ceylon.language.Integer t = .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.sharedStat$t(.ceylon.language.Integer.$TypeDescriptor$, s);
                return $calltyped$(s, t);
            }
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .ceylon.language.String $call$(final .java.lang.Object $param$0) {
                final .java.lang.String s = ((.ceylon.language.String)$param$0).toString();
                final .ceylon.language.Integer t = .com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.sharedStat$t(.ceylon.language.Integer.$TypeDescriptor$, s);
                return $calltyped$(s, t);
            }
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .ceylon.language.String $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final .java.lang.String s = ((.ceylon.language.String)$param$0).toString();
                final .ceylon.language.Integer t = (.ceylon.language.Integer)$param$1;
                return $calltyped$(s, t);
            }
            
            private .ceylon.language.String $calltyped$(final .java.lang.String s, final .ceylon.language.Integer t) {
                return .ceylon.language.String.instance(.com.redhat.ceylon.compiler.java.test.structure.method.StaticMethod.sharedStat(.ceylon.language.Integer.$TypeDescriptor$, s, t));
            }
        };
        ref.$call$((.java.lang.Object).ceylon.language.String.instance(""), .ceylon.language.Integer.instance(1L));
        final .java.lang.Object i = (
            let
            {
                .java.lang.String arg$6$0 = "123";
                long arg$6$1 = .ceylon.language.Integer.parse$radix(arg$6$0);
            }
            returning .ceylon.language.Integer.parse(arg$6$0, arg$6$1);
        );
    }
}