package com.redhat.ceylon.compiler.java.test.structure.klass;

final class deferredFunctionInitialization {
    
    private deferredFunctionInitialization() {
    }
    
    static void deferredFunctionInitialization() {
        
        final class s {
            
            private s() {
                this.s = null;
            }
            private .ceylon.language.Callable<? extends .ceylon.language.String> s;
            
            .java.lang.String s() {
                if (s == null) throw new .com.redhat.ceylon.compiler.java.language.UninitializedMethodError(); else return s.$call().toString();
            }
        }
        final s s = new s();
        s.s = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>("ceylon.language.Callable<ceylon.language.String>"){
            
            @.java.lang.Override
            public .ceylon.language.String $call() {
                return .ceylon.language.String.instance("hello");
            }
        };
        .ceylon.language.print.print(.ceylon.language.String.instance(s.s()));
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.structure.klass.deferredFunctionInitialization.deferredFunctionInitialization();
    }
}