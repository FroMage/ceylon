package com.redhat.ceylon.compiler.java.test.statement.conditional;

class AssertConditionListIsBoolBool implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    AssertConditionListIsBoolBool() {
    }
    
    private final boolean m$priv$(final .java.lang.Object x, final long z) {
        final long x$1;
        .java.lang.Object x$0 = null;
        if ((x$0 = x) instanceof .ceylon.language.Integer) {
            x$1 = ((.ceylon.language.Integer)x$0).longValue();
            if (x$1 > 0L) {
                if (z < 10L) {
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is Integer x" + .java.lang.System.lineSeparator() + "\tunviolated " + "x > 0" + .java.lang.System.lineSeparator() + "\tviolated " + "z < 10"));
                }
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is Integer x" + .java.lang.System.lineSeparator() + "\tviolated " + "x > 0" + .java.lang.System.lineSeparator() + "\tuntested " + "z < 10"));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Integer x" + .java.lang.System.lineSeparator() + "\tuntested " + "x > 0" + .java.lang.System.lineSeparator() + "\tuntested " + "z < 10") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.Integer.$TypeDescriptor$, x$0));
        }
        return z == 1L;
    }
    
    private final boolean mvar$priv$(final .java.lang.Object x, final long z) {
        final long y$3;
        .java.lang.Object y$2 = null;
        if ((y$2 = x) instanceof .ceylon.language.Integer) {
            y$3 = ((.ceylon.language.Integer)y$2).longValue();
            if (y$3 > 0L) {
                if (z < 10L) {
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is Integer y = x" + .java.lang.System.lineSeparator() + "\tunviolated " + "y > 0" + .java.lang.System.lineSeparator() + "\tviolated " + "z < 10"));
                }
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is Integer y = x" + .java.lang.System.lineSeparator() + "\tviolated " + "y > 0" + .java.lang.System.lineSeparator() + "\tuntested " + "z < 10"));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Integer y = x" + .java.lang.System.lineSeparator() + "\tuntested " + "y > 0" + .java.lang.System.lineSeparator() + "\tuntested " + "z < 10") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.Integer.$TypeDescriptor$, y$2));
        }
        return z == 1L;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.conditional.AssertConditionListIsBoolBool.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.conditional.AssertConditionListIsBoolBool.class);
}