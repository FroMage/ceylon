package com.redhat.ceylon.compiler.java.test.statement.conditional;

class AssertIsWithMethod implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    AssertIsWithMethod() {
    }
    
    private final .com.redhat.ceylon.compiler.java.test.statement.conditional.Foo give$priv$() {
        return new .com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub();
    }
    
    public final void m() {
        final .com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub y$1;
        .java.lang.Object y$0 = null;
        if ((y$0 = give$priv$()) instanceof .com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub) {
            y$1 = (.com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub)y$0;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is FooSub y = give()") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(.com.redhat.ceylon.compiler.java.test.statement.conditional.FooSub.$TypeDescriptor$, y$0));
        }
        y$1.foo();
        final .java.lang.Object y2$3;
        .java.lang.Object y2$2 = null;
        if ((y2$2 = give$priv$()) == null) {
            y2$3 = y2$2;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Null y2 = give()") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(.ceylon.language.Null.$TypeDescriptor$, y2$2));
        }
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.conditional.AssertIsWithMethod.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.conditional.AssertIsWithMethod.class);
}