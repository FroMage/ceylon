package com.redhat.ceylon.compiler.java.test.structure.klass;

class StaticClass implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public static class SharedStatic implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        public SharedStatic() {
            (
                let
                {
                    .java.lang.String $ceylontmp$s$0 = $default$SharedStatic$s();
                    this($ceylontmp$s$0);
                }
                returning null;
            );
        }
        
        public SharedStatic(final .java.lang.String s) {
        }
        
        public static .java.lang.String $default$SharedStatic$s() {
            return "";
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.SharedStatic.class));
        }
    }
    
    static class Static extends .com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.SharedStatic {
        
        Static() {
            super();
        }
        
        @.java.lang.Override
        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.Static.class));
        }
    }
    
    public StaticClass() {
        new .com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.Static();
        new .com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.SharedStatic();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.class);
}
final class staticClass_ {
    
    private staticClass_() {
    }
    
    static void staticClass() {
        .com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.SharedStatic sharedStat = new .com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.SharedStatic();
        sharedStat = (
            let
            {
                .java.lang.String arg$1$0 = .com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.SharedStatic.$default$SharedStatic$s();
            }
            returning new .com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.SharedStatic(arg$1$0);
        );
        sharedStat = (
            let
            {
                .java.lang.String arg$2$0 = "";
            }
            returning new .com.redhat.ceylon.compiler.java.test.structure.klass.StaticClass.SharedStatic(arg$2$0);
        );
    }
}