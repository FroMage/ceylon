package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class callableArgumentBinary_f {
    
    private callableArgumentBinary_f() {
    }
    
    static void callableArgumentBinary_f(final .ceylon.language.Callable<? extends .java.lang.Object> foo) {
    }
}
final class callableArgumentBinary_bar {
    
    private callableArgumentBinary_bar() {
    }
    
    static void callableArgumentBinary_bar(final long i, final .java.lang.String s) {
    }
}
final class callableArgumentBinary_m {
    
    private callableArgumentBinary_m() {
    }
    
    static void callableArgumentBinary_m() {
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentBinary_f.callableArgumentBinary_f(new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>("ceylon.language.Callable<ceylon.language.Void,ceylon.language.Integer,ceylon.language.String>"){
            
            @.java.lang.Override
            public .java.lang.Object $call(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                return (
                    let
                    {
                        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentBinary_bar.callableArgumentBinary_bar(((.ceylon.language.Integer)$param$0).longValue(), ((.ceylon.language.String)$param$1).toString());
                    }
                    returning null;
                );
            }
        });
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.invoke.callableArgumentBinary_m.callableArgumentBinary_m();
    }
}