package com.redhat.ceylon.compiler.java.test.statement.conditional;

class AssertionConditionList implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    AssertionConditionList() {
    }
    
    private final boolean m1$priv$(final long x) {
        if (x > 0L) {
            if (x < 10L) {
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "x > 0" + .java.lang.System.lineSeparator() + "\tviolated " + "x < 10"));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "x > 0" + .java.lang.System.lineSeparator() + "\tuntested " + "x < 10"));
        }
        return x == 1L;
    }
    
    private final boolean m2$priv$(final .java.lang.Object x, final long z) {
        final long y$1;
        .java.lang.Object y$0 = null;
        if ((y$0 = x) instanceof .ceylon.language.Integer) {
            y$1 = ((.ceylon.language.Integer)y$0).longValue();
            if (y$1 > 0L) {
                if (z < 10L) {
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is Integer y = x" + .java.lang.System.lineSeparator() + "\tunviolated " + "y > 0" + .java.lang.System.lineSeparator() + "\tviolated " + "z < 10"));
                }
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is Integer y = x" + .java.lang.System.lineSeparator() + "\tviolated " + "y > 0" + .java.lang.System.lineSeparator() + "\tuntested " + "z < 10"));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Integer y = x" + .java.lang.System.lineSeparator() + "\tuntested " + "y > 0" + .java.lang.System.lineSeparator() + "\tuntested " + "z < 10") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(.ceylon.language.Integer.$TypeDescriptor$, y$0));
        }
        return y$1 == 1L;
    }
    
    private final boolean m3$priv$(final .java.lang.Object x, final long z) {
        final long y$3;
        if (z < 10L) {
            .java.lang.Object y$2 = null;
            if ((y$2 = x) instanceof .ceylon.language.Integer) {
                y$3 = ((.ceylon.language.Integer)y$2).longValue();
                if (y$3 > 0L) {
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "z < 10" + .java.lang.System.lineSeparator() + "\tunviolated " + "is Integer y = x" + .java.lang.System.lineSeparator() + "\tviolated " + "y > 0"));
                }
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "z < 10" + .java.lang.System.lineSeparator() + "\tviolated " + "is Integer y = x" + .java.lang.System.lineSeparator() + "\tuntested " + "y > 0") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(.ceylon.language.Integer.$TypeDescriptor$, y$2));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "z < 10" + .java.lang.System.lineSeparator() + "\tuntested " + "is Integer y = x" + .java.lang.System.lineSeparator() + "\tuntested " + "y > 0"));
        }
        return y$3 == 1L;
    }
    
    private final boolean m4$priv$(final .java.lang.Object x, final long z) {
        final long y$5;
        if (z < 10L) {
            if (z > 0L) {
                .java.lang.Object y$4 = null;
                if ((y$4 = x) instanceof .ceylon.language.Integer) {
                    y$5 = ((.ceylon.language.Integer)y$4).longValue();
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "z < 10" + .java.lang.System.lineSeparator() + "\tunviolated " + "z > 0" + .java.lang.System.lineSeparator() + "\tviolated " + "is Integer y = x") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(.ceylon.language.Integer.$TypeDescriptor$, y$4));
                }
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "z < 10" + .java.lang.System.lineSeparator() + "\tviolated " + "z > 0" + .java.lang.System.lineSeparator() + "\tuntested " + "is Integer y = x"));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "z < 10" + .java.lang.System.lineSeparator() + "\tuntested " + "z > 0" + .java.lang.System.lineSeparator() + "\tuntested " + "is Integer y = x"));
        }
        return y$5 == 1L;
    }
    
    private final boolean m5$priv$(final .ceylon.language.Sequential<? extends .java.lang.Object> x) {
        final long y$9;
        final .ceylon.language.Sequence<? extends .java.lang.Object> x$7;
        .ceylon.language.Sequential<? extends .java.lang.Object> x$6 = null;
        if ((x$6 = x) instanceof .ceylon.language.Sequence) {
            x$7 = (.ceylon.language.Sequence<? extends .java.lang.Object>)(.ceylon.language.Sequence)x$6;
            .java.lang.Object y$8 = null;
            if ((y$8 = x$7.getFromFirst(0L)) instanceof .ceylon.language.Integer) {
                y$9 = ((.ceylon.language.Integer)y$8).longValue();
                if (y$9 > 0L) {
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "nonempty x" + .java.lang.System.lineSeparator() + "\tunviolated " + "is Integer y = x[0]" + .java.lang.System.lineSeparator() + "\tviolated " + "y > 0"));
                }
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "nonempty x" + .java.lang.System.lineSeparator() + "\tviolated " + "is Integer y = x[0]" + .java.lang.System.lineSeparator() + "\tuntested " + "y > 0") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(.ceylon.language.Integer.$TypeDescriptor$, y$8));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "nonempty x" + .java.lang.System.lineSeparator() + "\tuntested " + "is Integer y = x[0]" + .java.lang.System.lineSeparator() + "\tuntested " + "y > 0"));
        }
        return y$9 == 1L;
    }
    
    private final boolean m6$priv$(final .ceylon.language.Sequential<? extends .java.lang.Object> x) {
        final long y$11;
        if (x.getFromFirst(0L) != null) {
            .java.lang.Object y$10 = null;
            if ((y$10 = x.getFromFirst(0L)) instanceof .ceylon.language.Integer) {
                y$11 = ((.ceylon.language.Integer)y$10).longValue();
                if (y$11 > 0L) {
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "x[0] exists" + .java.lang.System.lineSeparator() + "\tunviolated " + "is Integer y = x[0]" + .java.lang.System.lineSeparator() + "\tviolated " + "y > 0"));
                }
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "x[0] exists" + .java.lang.System.lineSeparator() + "\tviolated " + "is Integer y = x[0]" + .java.lang.System.lineSeparator() + "\tuntested " + "y > 0") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(.ceylon.language.Integer.$TypeDescriptor$, y$10));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "x[0] exists" + .java.lang.System.lineSeparator() + "\tuntested " + "is Integer y = x[0]" + .java.lang.System.lineSeparator() + "\tuntested " + "y > 0"));
        }
        return y$11 == 1L;
    }
    
    private final boolean m9$priv$(final .java.lang.Object x, final .java.lang.Object y) {
        final long y1$15;
        final long x1$13;
        .java.lang.Object x1$12 = null;
        if ((x1$12 = x) instanceof .ceylon.language.Integer) {
            x1$13 = ((.ceylon.language.Integer)x1$12).longValue();
            .java.lang.Object y1$14 = null;
            if ((y1$14 = y) instanceof .ceylon.language.Integer) {
                y1$15 = ((.ceylon.language.Integer)y1$14).longValue();
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is Integer x1 = x" + .java.lang.System.lineSeparator() + "\tviolated " + "is Integer y1 = y") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(.ceylon.language.Integer.$TypeDescriptor$, y1$14));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Integer x1 = x" + .java.lang.System.lineSeparator() + "\tuntested " + "is Integer y1 = y") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(.ceylon.language.Integer.$TypeDescriptor$, x1$12));
        }
        return x1$13 + y1$15 == 0L;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.conditional.AssertionConditionList.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.conditional.AssertionConditionList.class);
}