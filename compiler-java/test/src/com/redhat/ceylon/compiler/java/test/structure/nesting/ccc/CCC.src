package com.redhat.ceylon.compiler.java.test.structure.nesting.ccc;

class C<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> {
    
    C() {
    }
    
    private final <U>T m1(final X b) {
        return (
            let
            {
                U $ceylontmp$u$1 = m1$u(b);
            }
            returning m1(b, $ceylontmp$u$1);
        );
    }
    
    private final <U>U m1$u(final X b) {
        return null;
    }
    
    private final <U>T m1(final X b, final U u) {
        throw new .ceylon.language.Exception(null, null);
    }
    
    .com.redhat.ceylon.compiler.java.test.structure.nesting.ccc.C<? extends T, ? super X>.CC CC$new() {
        return new CC();
    }
    
    class CC {
        
        protected CC() {
        }
        
        .com.redhat.ceylon.compiler.java.test.structure.nesting.ccc.C<? extends T, ? super X>.CC.CCC CCC$new() {
            return new CCC();
        }
        
        class CCC {
            
            protected CCC() {
            }
            
            private final T m2() {
                return m1(null);
            }
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.nesting.ccc.C();
    }
}