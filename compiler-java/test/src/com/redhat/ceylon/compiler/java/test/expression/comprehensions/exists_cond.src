package com.redhat.ceylon.compiler.java.test.expression.comprehensions;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 3)
@.com.redhat.ceylon.compiler.java.metadata.Method
final class c_ {
    
    private c_() {
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language.Void")
    static void c() {
        final .ceylon.language.Sequence<? extends .ceylon.language.String> seq = new .ceylon.language.ArraySequence<.ceylon.language.String>(null, .ceylon.language.String.instance("a"), null, .ceylon.language.String.instance("b"), null);
        .ceylon.language.print_.print(new .com.redhat.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Character>(){
            
            public final .ceylon.language.Iterator<.ceylon.language.Character> getIterator() {
                return new .ceylon.language.Iterator<.ceylon.language.Character>(){
                    private final .ceylon.language.Iterator<? extends .ceylon.language.String> iter$0 = seq.getIterator();
                    private .ceylon.language.String x;
                    private boolean x$exhausted;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmpitem0 = iter$0.next();
                        x$exhausted = $ceylontmpitem0 == .ceylon.language.exhausted_.getExhausted();
                        if (x$exhausted) {
                            return false;
                        } else {
                            x = (.ceylon.language.String)$ceylontmpitem0;
                        }
                        return true;
                    }
                    private .ceylon.language.String $x$1;
                    
                    private final boolean next1() {
                        while (this.x() && ($x$1 = x) == null) {
                        }
                        return !x$exhausted;
                    }
                    private .ceylon.language.Character $c$2;
                    
                    private final boolean next2() {
                        while (this.next1() && ($c$2 = .ceylon.language.String.instance(.ceylon.language.String.initial($x$1.toString(), 1L)).item(.ceylon.language.Integer.instance(0L))) == null) {
                        }
                        return !x$exhausted;
                    }
                    
                    public final .java.lang.Object next() {
                        return this.next2() ? .ceylon.language.Character.instance(.ceylon.language.Character.getUppercased($c$2.intValue())) : .ceylon.language.exhausted_.getExhausted();
                    }
                };
            }
        }.getSequence());
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.getProcess().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.expression.comprehensions.c_.c();
    }
}
