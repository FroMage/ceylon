package com.redhat.ceylon.compiler.java.test.structure.ee;

class JavaCollectionBoxes<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    protected JavaCollectionBoxes(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        super();
        this.$reified$T = $reified$T;
        this.listString = null;
        this.mapString = null;
        this.setString = null;
        this.listInteger = null;
        this.mapInteger = null;
        this.setInteger = null;
        this.listByte = null;
        this.mapByte = null;
        this.setByte = null;
        this.listBoolean = null;
        this.mapBoolean = null;
        this.setBoolean = null;
        this.listCharacter = null;
        this.mapCharacter = null;
        this.setCharacter = null;
        this.listFloat = null;
        this.mapFloat = null;
        this.setFloat = null;
        this.listNested = null;
        this.mapNested = null;
        this.setNested = null;
        this.listT = null;
        this.mapT = null;
        this.setT = null;
    }
    
    JavaCollectionBoxes(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, .ceylon.language.List<? extends .ceylon.language.String> listString, .ceylon.language.Map<? extends .ceylon.language.String, ? extends .ceylon.language.String> mapString, .ceylon.language.Set<? extends .ceylon.language.String> setString) {
        this.$reified$T = $reified$T;
        this.listString = (
            let
            {
                .ceylon.language.List<? extends .ceylon.language.String> $ceylontmp$0 = listString;
            }
            returning $ceylontmp$0 == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.String, .ceylon.language.String>toCeylonList(.ceylon.language.String.$TypeDescriptor$).inverted().wrap($ceylontmp$0);
        );
        this.mapString = (
            let
            {
                .ceylon.language.Map<? extends .ceylon.language.String, ? extends .ceylon.language.String> $ceylontmp$1 = mapString;
            }
            returning $ceylontmp$1 == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.String, .java.lang.String, .ceylon.language.String, .ceylon.language.String>toCeylonMap(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$).inverted().wrap($ceylontmp$1);
        );
        this.setString = (
            let
            {
                .ceylon.language.Set<? extends .ceylon.language.String> $ceylontmp$2 = setString;
            }
            returning $ceylontmp$2 == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.String, .ceylon.language.String>toCeylonSet(.ceylon.language.String.$TypeDescriptor$).inverted().wrap($ceylontmp$2);
        );
        this.listInteger = null;
        this.mapInteger = null;
        this.setInteger = null;
        this.listByte = null;
        this.mapByte = null;
        this.setByte = null;
        this.listBoolean = null;
        this.mapBoolean = null;
        this.setBoolean = null;
        this.listCharacter = null;
        this.mapCharacter = null;
        this.setCharacter = null;
        this.listFloat = null;
        this.mapFloat = null;
        this.setFloat = null;
        this.listNested = null;
        this.mapNested = null;
        this.setNested = null;
        this.listT = null;
        this.mapT = null;
        this.setT = null;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    private .java.util.List<.java.lang.String> listString;
    
    public .ceylon.language.List<? extends .ceylon.language.String> getListString() {
        return this.listString == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.String, .ceylon.language.String>toCeylonList(.ceylon.language.String.$TypeDescriptor$).wrap(this.listString);
    }
    
    public void setListString(final .ceylon.language.List<? extends .ceylon.language.String> listString) {
        this.listString = listString == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.String, .ceylon.language.String>toCeylonList(.ceylon.language.String.$TypeDescriptor$).inverted().wrap(listString);
    }
    private .java.util.Map<.java.lang.String, .java.lang.String> mapString;
    
    public .ceylon.language.Map<? extends .ceylon.language.String, ? extends .ceylon.language.String> getMapString() {
        return this.mapString == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.String, .java.lang.String, .ceylon.language.String, .ceylon.language.String>toCeylonMap(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$).wrap(this.mapString);
    }
    
    public void setMapString(final .ceylon.language.Map<? extends .ceylon.language.String, ? extends .ceylon.language.String> mapString) {
        this.mapString = mapString == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.String, .java.lang.String, .ceylon.language.String, .ceylon.language.String>toCeylonMap(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$).inverted().wrap(mapString);
    }
    private .java.util.Set<.java.lang.String> setString;
    
    public .ceylon.language.Set<? extends .ceylon.language.String> getSetString() {
        return this.setString == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.String, .ceylon.language.String>toCeylonSet(.ceylon.language.String.$TypeDescriptor$).wrap(this.setString);
    }
    
    public void setSetString(final .ceylon.language.Set<? extends .ceylon.language.String> setString) {
        this.setString = setString == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.String, .ceylon.language.String>toCeylonSet(.ceylon.language.String.$TypeDescriptor$).inverted().wrap(setString);
    }
    private .java.util.List<.java.lang.Long> listInteger;
    
    public .ceylon.language.List<? extends .ceylon.language.Integer> getListInteger() {
        return this.listInteger == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Long, .ceylon.language.Integer>toCeylonList(.ceylon.language.Integer.$TypeDescriptor$).wrap(this.listInteger);
    }
    
    public void setListInteger(final .ceylon.language.List<? extends .ceylon.language.Integer> listInteger) {
        this.listInteger = listInteger == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Long, .ceylon.language.Integer>toCeylonList(.ceylon.language.Integer.$TypeDescriptor$).inverted().wrap(listInteger);
    }
    private .java.util.Map<.java.lang.Long, .java.lang.Long> mapInteger;
    
    public .ceylon.language.Map<? extends .ceylon.language.Integer, ? extends .ceylon.language.Integer> getMapInteger() {
        return this.mapInteger == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Long, .java.lang.Long, .ceylon.language.Integer, .ceylon.language.Integer>toCeylonMap(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$).wrap(this.mapInteger);
    }
    
    public void setMapInteger(final .ceylon.language.Map<? extends .ceylon.language.Integer, ? extends .ceylon.language.Integer> mapInteger) {
        this.mapInteger = mapInteger == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Long, .java.lang.Long, .ceylon.language.Integer, .ceylon.language.Integer>toCeylonMap(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$).inverted().wrap(mapInteger);
    }
    private .java.util.Set<.java.lang.Long> setInteger;
    
    public .ceylon.language.Set<? extends .ceylon.language.Integer> getSetInteger() {
        return this.setInteger == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Long, .ceylon.language.Integer>toCeylonSet(.ceylon.language.Integer.$TypeDescriptor$).wrap(this.setInteger);
    }
    
    public void setSetInteger(final .ceylon.language.Set<? extends .ceylon.language.Integer> setInteger) {
        this.setInteger = setInteger == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Long, .ceylon.language.Integer>toCeylonSet(.ceylon.language.Integer.$TypeDescriptor$).inverted().wrap(setInteger);
    }
    private .java.util.List<java.lang.Byte> listByte;
    
    public .ceylon.language.List<? extends .ceylon.language.Byte> getListByte() {
        return this.listByte == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Byte, .ceylon.language.Byte>toCeylonList(.ceylon.language.Byte.$TypeDescriptor$).wrap(this.listByte);
    }
    
    public void setListByte(final .ceylon.language.List<? extends .ceylon.language.Byte> listByte) {
        this.listByte = listByte == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Byte, .ceylon.language.Byte>toCeylonList(.ceylon.language.Byte.$TypeDescriptor$).inverted().wrap(listByte);
    }
    private .java.util.Map<java.lang.Byte, java.lang.Byte> mapByte;
    
    public .ceylon.language.Map<? extends .ceylon.language.Byte, ? extends .ceylon.language.Byte> getMapByte() {
        return this.mapByte == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Byte, java.lang.Byte, .ceylon.language.Byte, .ceylon.language.Byte>toCeylonMap(.ceylon.language.Byte.$TypeDescriptor$, .ceylon.language.Byte.$TypeDescriptor$).wrap(this.mapByte);
    }
    
    public void setMapByte(final .ceylon.language.Map<? extends .ceylon.language.Byte, ? extends .ceylon.language.Byte> mapByte) {
        this.mapByte = mapByte == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Byte, java.lang.Byte, .ceylon.language.Byte, .ceylon.language.Byte>toCeylonMap(.ceylon.language.Byte.$TypeDescriptor$, .ceylon.language.Byte.$TypeDescriptor$).inverted().wrap(mapByte);
    }
    private .java.util.Set<java.lang.Byte> setByte;
    
    public .ceylon.language.Set<? extends .ceylon.language.Byte> getSetByte() {
        return this.setByte == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Byte, .ceylon.language.Byte>toCeylonSet(.ceylon.language.Byte.$TypeDescriptor$).wrap(this.setByte);
    }
    
    public void setSetByte(final .ceylon.language.Set<? extends .ceylon.language.Byte> setByte) {
        this.setByte = setByte == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Byte, .ceylon.language.Byte>toCeylonSet(.ceylon.language.Byte.$TypeDescriptor$).inverted().wrap(setByte);
    }
    private .java.util.List<.java.lang.Boolean> listBoolean;
    
    public .ceylon.language.List<? extends .ceylon.language.Boolean> getListBoolean() {
        return this.listBoolean == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Boolean, .ceylon.language.Boolean>toCeylonList(.ceylon.language.Boolean.$TypeDescriptor$).wrap(this.listBoolean);
    }
    
    public void setListBoolean(final .ceylon.language.List<? extends .ceylon.language.Boolean> listBoolean) {
        this.listBoolean = listBoolean == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Boolean, .ceylon.language.Boolean>toCeylonList(.ceylon.language.Boolean.$TypeDescriptor$).inverted().wrap(listBoolean);
    }
    private .java.util.Map<.java.lang.Boolean, .java.lang.Boolean> mapBoolean;
    
    public .ceylon.language.Map<? extends .ceylon.language.Boolean, ? extends .ceylon.language.Boolean> getMapBoolean() {
        return this.mapBoolean == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Boolean, .java.lang.Boolean, .ceylon.language.Boolean, .ceylon.language.Boolean>toCeylonMap(.ceylon.language.Boolean.$TypeDescriptor$, .ceylon.language.Boolean.$TypeDescriptor$).wrap(this.mapBoolean);
    }
    
    public void setMapBoolean(final .ceylon.language.Map<? extends .ceylon.language.Boolean, ? extends .ceylon.language.Boolean> mapBoolean) {
        this.mapBoolean = mapBoolean == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Boolean, .java.lang.Boolean, .ceylon.language.Boolean, .ceylon.language.Boolean>toCeylonMap(.ceylon.language.Boolean.$TypeDescriptor$, .ceylon.language.Boolean.$TypeDescriptor$).inverted().wrap(mapBoolean);
    }
    private .java.util.Set<.java.lang.Boolean> setBoolean;
    
    public .ceylon.language.Set<? extends .ceylon.language.Boolean> getSetBoolean() {
        return this.setBoolean == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Boolean, .ceylon.language.Boolean>toCeylonSet(.ceylon.language.Boolean.$TypeDescriptor$).wrap(this.setBoolean);
    }
    
    public void setSetBoolean(final .ceylon.language.Set<? extends .ceylon.language.Boolean> setBoolean) {
        this.setBoolean = setBoolean == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Boolean, .ceylon.language.Boolean>toCeylonSet(.ceylon.language.Boolean.$TypeDescriptor$).inverted().wrap(setBoolean);
    }
    private .java.util.List<java.lang.Integer> listCharacter;
    
    public .ceylon.language.List<? extends .ceylon.language.Character> getListCharacter() {
        return this.listCharacter == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Integer, .ceylon.language.Character>toCeylonList(.ceylon.language.Character.$TypeDescriptor$).wrap(this.listCharacter);
    }
    
    public void setListCharacter(final .ceylon.language.List<? extends .ceylon.language.Character> listCharacter) {
        this.listCharacter = listCharacter == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Integer, .ceylon.language.Character>toCeylonList(.ceylon.language.Character.$TypeDescriptor$).inverted().wrap(listCharacter);
    }
    private .java.util.Map<java.lang.Integer, java.lang.Integer> mapCharacter;
    
    public .ceylon.language.Map<? extends .ceylon.language.Character, ? extends .ceylon.language.Character> getMapCharacter() {
        return this.mapCharacter == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Integer, java.lang.Integer, .ceylon.language.Character, .ceylon.language.Character>toCeylonMap(.ceylon.language.Character.$TypeDescriptor$, .ceylon.language.Character.$TypeDescriptor$).wrap(this.mapCharacter);
    }
    
    public void setMapCharacter(final .ceylon.language.Map<? extends .ceylon.language.Character, ? extends .ceylon.language.Character> mapCharacter) {
        this.mapCharacter = mapCharacter == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Integer, java.lang.Integer, .ceylon.language.Character, .ceylon.language.Character>toCeylonMap(.ceylon.language.Character.$TypeDescriptor$, .ceylon.language.Character.$TypeDescriptor$).inverted().wrap(mapCharacter);
    }
    private .java.util.Set<java.lang.Integer> setCharacter;
    
    public .ceylon.language.Set<? extends .ceylon.language.Character> getSetCharacter() {
        return this.setCharacter == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Integer, .ceylon.language.Character>toCeylonSet(.ceylon.language.Character.$TypeDescriptor$).wrap(this.setCharacter);
    }
    
    public void setSetCharacter(final .ceylon.language.Set<? extends .ceylon.language.Character> setCharacter) {
        this.setCharacter = setCharacter == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<java.lang.Integer, .ceylon.language.Character>toCeylonSet(.ceylon.language.Character.$TypeDescriptor$).inverted().wrap(setCharacter);
    }
    private .java.util.List<.java.lang.Double> listFloat;
    
    public .ceylon.language.List<? extends .ceylon.language.Float> getListFloat() {
        return this.listFloat == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Double, .ceylon.language.Float>toCeylonList(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$)).wrap(this.listFloat);
    }
    
    public void setListFloat(final .ceylon.language.List<? extends .ceylon.language.Float> listFloat) {
        this.listFloat = listFloat == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Double, .ceylon.language.Float>toCeylonList(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$)).inverted().wrap(listFloat);
    }
    private .java.util.Map<.java.lang.Double, .java.lang.Double> mapFloat;
    
    public .ceylon.language.Map<? extends .ceylon.language.Float, ? extends .ceylon.language.Float> getMapFloat() {
        return this.mapFloat == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Double, .java.lang.Double, .ceylon.language.Float, .ceylon.language.Float>toCeylonMap(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$)).wrap(this.mapFloat);
    }
    
    public void setMapFloat(final .ceylon.language.Map<? extends .ceylon.language.Float, ? extends .ceylon.language.Float> mapFloat) {
        this.mapFloat = mapFloat == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Double, .java.lang.Double, .ceylon.language.Float, .ceylon.language.Float>toCeylonMap(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$)).inverted().wrap(mapFloat);
    }
    private .java.util.Set<.java.lang.Double> setFloat;
    
    public .ceylon.language.Set<? extends .ceylon.language.Float> getSetFloat() {
        return this.setFloat == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Double, .ceylon.language.Float>toCeylonSet(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$)).wrap(this.setFloat);
    }
    
    public void setSetFloat(final .ceylon.language.Set<? extends .ceylon.language.Float> setFloat) {
        this.setFloat = setFloat == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.lang.Double, .ceylon.language.Float>toCeylonSet(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$)).inverted().wrap(setFloat);
    }
    private .java.util.List<.java.util.List<.java.lang.Double>> listNested;
    
    public .ceylon.language.List<? extends .ceylon.language.List<? extends .ceylon.language.Float>> getListNested() {
        return this.listNested == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.util.List<.java.lang.Double>, .ceylon.language.List<? extends .ceylon.language.Float>>toCeylonList(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.List.class, .ceylon.language.Float.$TypeDescriptor$)).wrap(this.listNested);
    }
    
    public void setListNested(final .ceylon.language.List<? extends .ceylon.language.List<? extends .ceylon.language.Float>> listNested) {
        this.listNested = listNested == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.util.List<.java.lang.Double>, .ceylon.language.List<? extends .ceylon.language.Float>>toCeylonList(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.List.class, .ceylon.language.Float.$TypeDescriptor$)).inverted().wrap(listNested);
    }
    private .java.util.Map<.java.util.Map<.java.lang.Double, .java.lang.Double>, .java.util.Map<.java.lang.Double, .java.lang.Double>> mapNested;
    
    public .ceylon.language.Map<? extends .ceylon.language.Map<? extends .ceylon.language.Float, ? extends .ceylon.language.Float>, ? extends .ceylon.language.Map<? extends .ceylon.language.Float, ? extends .ceylon.language.Float>> getMapNested() {
        return this.mapNested == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.util.Map<.java.lang.Double, .java.lang.Double>, .java.util.Map<.java.lang.Double, .java.lang.Double>, .ceylon.language.Map<? extends .ceylon.language.Float, ? extends .ceylon.language.Float>, .ceylon.language.Map<? extends .ceylon.language.Float, ? extends .ceylon.language.Float>>toCeylonMap(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Map.class, .ceylon.language.Float.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Map.class, .ceylon.language.Float.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$)).wrap(this.mapNested);
    }
    
    public void setMapNested(final .ceylon.language.Map<? extends .ceylon.language.Map<? extends .ceylon.language.Float, ? extends .ceylon.language.Float>, ? extends .ceylon.language.Map<? extends .ceylon.language.Float, ? extends .ceylon.language.Float>> mapNested) {
        this.mapNested = mapNested == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.util.Map<.java.lang.Double, .java.lang.Double>, .java.util.Map<.java.lang.Double, .java.lang.Double>, .ceylon.language.Map<? extends .ceylon.language.Float, ? extends .ceylon.language.Float>, .ceylon.language.Map<? extends .ceylon.language.Float, ? extends .ceylon.language.Float>>toCeylonMap(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Map.class, .ceylon.language.Float.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Map.class, .ceylon.language.Float.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$)).inverted().wrap(mapNested);
    }
    private .java.util.Set<.java.util.Set<.java.lang.Double>> setNested;
    
    public .ceylon.language.Set<? extends .ceylon.language.Set<? extends .ceylon.language.Float>> getSetNested() {
        return this.setNested == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.util.Set<.java.lang.Double>, .ceylon.language.Set<? extends .ceylon.language.Float>>toCeylonSet(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Set.class, .ceylon.language.Float.$TypeDescriptor$)).wrap(this.setNested);
    }
    
    public void setSetNested(final .ceylon.language.Set<? extends .ceylon.language.Set<? extends .ceylon.language.Float>> setNested) {
        this.setNested = setNested == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<.java.util.Set<.java.lang.Double>, .ceylon.language.Set<? extends .ceylon.language.Float>>toCeylonSet(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Set.class, .ceylon.language.Float.$TypeDescriptor$)).inverted().wrap(setNested);
    }
    private .java.util.List<T> listT;
    
    public .ceylon.language.List<? extends T> getListT() {
        return this.listT == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<T, T>toCeylonList($reified$T).wrap(this.listT);
    }
    
    public void setListT(final .ceylon.language.List<? extends T> listT) {
        this.listT = listT == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<T, T>toCeylonList($reified$T).inverted().wrap(listT);
    }
    private .java.util.Map<T, T> mapT;
    
    public .ceylon.language.Map<? extends T, ? extends T> getMapT() {
        return this.mapT == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<T, T, T, T>toCeylonMap($reified$T, $reified$T).wrap(this.mapT);
    }
    
    public void setMapT(final .ceylon.language.Map<? extends T, ? extends T> mapT) {
        this.mapT = mapT == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<T, T, T, T>toCeylonMap($reified$T, $reified$T).inverted().wrap(mapT);
    }
    private .java.util.Set<T> setT;
    
    public .ceylon.language.Set<? extends T> getSetT() {
        return this.setT == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<T, T>toCeylonSet($reified$T).wrap(this.setT);
    }
    
    public void setSetT(final .ceylon.language.Set<? extends T> setT) {
        this.setT = setT == null ? null : .com.redhat.ceylon.compiler.java.wrapping.Wrappings.<T, T>toCeylonSet($reified$T).inverted().wrap(setT);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.ee.JavaCollectionBoxes.class, $reified$T);
    }
}