<chapter id="tools">
    <title>Toolset</title>

    <para>The Ceylon SDK contains the following tools:</para>
    
    <itemizedlist>
        <listitem>
            <para>the Java VM, <literal>java</literal>,</para>
        </listitem>
        <listitem>
            <para>the front end for the Java VM, <literal>ceylon</literal>,</para>
        </listitem>
        <listitem>
            <para>the compiler, <literal>ceylonc</literal>,</para>
        </listitem>
        <listitem>
            <para>the documentation compiler, <literal>ceylond</literal>,</para>
        </listitem>
        <listitem>
            <para>the repository replicator, <literal>ceylonr</literal>, and</para>
        </listitem>
        <listitem>
            <para>the source archive extractor, <literal>ceylonf</literal>.</para>
        </listitem>
    </itemizedlist>
    
    <section>
        <title>Source directories</title>
        
        <para>A <emphasis>source directory</emphasis> contains Ceylon source 
        code in files with the extension <literal>.ceylon</literal> and Java 
        source code in files with the extension <literal>.java</literal>. 
        The module and package to which a compilation unit belongs is 
        determined by the subdirectory in which the source file is found.</para>
        
        <para>The name of the package to which a compilation unit belongs is 
        formed by replacing every path directory separator character with a 
        period in the relative path from the source directory to the 
        subdirectory containing the source file. In the case of a Java source 
        file, the subdirectory must agree with the package specified by the 
        Java <literal>package</literal> declaration.</para>
        
        <para>The name of the module to which a compilation unit belongs is 
        determined by searching all containing directories for a module 
        descriptor. The name of the module is formed by replacing every path
        directory separator character with a period in the relative path 
        from the source directory to the subdirectory containing the module 
        descriptor.</para>
        
        <para>Thus, the structure of the source directory containing the module
        <literal>org.hello</literal> might be the following:</para>
        
        <programlisting><![CDATA[source/
    org/
        hello/
            module.ceylon      //the module descriptor
            main/
                hello.ceylon
            default/
                DefaultHello.ceylon
            personalized/
                PersonalizedHello.ceylon]]></programlisting>
                
        <para>The source code for multiple modules may be contained in a
        single source directory.</para>
                
        <comment><para>TODO: define some kind of "default module" for the
        case where no module descriptor is found, just for test code.</para></comment>
        
    </section>
    
    <section>
        <title>The VM front end</title>
        
        <para>The <literal>ceylon</literal> command accepts the fully
        qualified name of a runnable module or of a toplevel method or 
        class with a single formal parameter of type <literal>Process</literal>, 
        along with the following options:</para>
        
        <itemizedlist>
            <listitem>
                <para><literal>-rep</literal> specifies a module
                repository.</para>
            </listitem>
            <listitem>
                <para><literal>-src</literal> specifies a source
                directory.</para>
            </listitem>
            <listitem>
                <para><literal>-d</literal> disables the default
                module repositories and source directory.</para>
            </listitem>
        </itemizedlist>
        
        <para>The default module repositories are <literal>modules</literal>
        and <literal>http://modules.ceylon.org</literal>,
        and the default source directory is <literal>source</literal>.</para>
        
        <programlisting>ceylon org.hibernate.test \
        -rep http://jboss.org/ceylon/modules \
        -src ~/projects/hibernate/src</programlisting>
               
        <para>Execution begins with the named toplevel method, and imported 
        modules are loaded lazily as classes they contain are needed. The 
        name and version id of the imported module containing the needed 
        class are determined from the imported package name specified by
        the compilation unit and the imported module version specified by 
        the module descriptor.</para>
        
        <comment><para>TODO: one slight issue with this is that with 
        wildcard imports it is sometimes ambiguous which package a class
        belongs to.</para></comment>
        
        <para>Each version of each module is loaded using a different class 
        loader. Classes inside a module have access to other classes in the 
        same module and to classes belonging to modules that are explicitly 
        imported in the module descriptor. Classes in other modules are not 
        accessible.</para>
        
        <para>The module runtime searches for modules in the following 
        locations:</para>
        
        <itemizedlist>
            <listitem>
                <para>module archives in the specified repositories,</para>
            </listitem>
            <listitem>
                <para>source archives in the specified repositories, 
                and</para>
            </listitem>
            <listitem>
                <para>module directories in the specified source 
                directories.</para>
            </listitem>
        </itemizedlist>
        
        <para>Source code in source archives and source directories is 
        automatically compiled by the module runtime.</para>
                
    </section>

    <section>
        <title>The compiler</title>
        
        <para>The Ceylon compiler is able to compile Ceylon and Java
        source code and directly produce module and source archives
        in a local module repository.</para>
        
        <para>The <literal>ceylonc</literal> command accepts a list of
        module names, along with the following options:</para>
        
        <itemizedlist>
            <listitem>
                <para><literal>-out</literal> specifies the output module 
                repository (which must be a local module repository).</para>
            </listitem>
            <listitem>
                <para><literal>-src</literal> specifies a source
                directory.</para>
            </listitem>
            <listitem>
                <para><literal>-rep</literal> specifies a module
                repository containing dependencies.</para>
            </listitem>
            <listitem>
                <para><literal>-d</literal> disables the default
                module repositories and source directory.</para>
            </listitem>
        </itemizedlist>
        
        <para>The default module repositories are <literal>modules</literal>
        and <literal>http://modules.ceylon.org</literal>,
        and the default source directory is <literal>source</literal>.
        The default output module repository is <literal>modules</literal>.</para>
        
        <programlisting>ceylonc org.hibernate.test org.hibernate \
        -rep http://jboss.org/ceylon/modules \
        -src ~/projects/hibernate/src \
        -out ~/projects/hibernate/build</programlisting>
        
        <comment><para>TODO: how do you create signed jars? Some additional
        commandline options?</para></comment>
        
        <para>The compiler searches for compilation units belonging to the 
        specified modules in the specified source directories. For each 
        specified module, the compiler generates a module archive, source 
        archive, and their checksum files in the specified output module 
        repository.</para>
        
        <para>All program elements imported by a compilation unit must
        belong to the same module as the compilation unit, or must belong
        to a module that is explicitly imported in the module descriptor.</para>
        
        <para>The compiler searches for dependencies in the following 
        locations:</para>
        
        <itemizedlist>
            <listitem>
                <para>module archives in the specified repositories,</para>
            </listitem>
            <listitem>
                <para>source archives in the specified repositories, 
                and</para>
            </listitem>
            <listitem>
                <para>module directories in the specified source 
                directories.</para>
            </listitem>
        </itemizedlist>
                
    </section>
    
    <section>
        <title>The documentation compiler</title>
        
        <para>The documentation compiler generates XHTML-format 
        documentation from Ceylon source files.</para>
        
        <para>The <literal>ceylond</literal> command accepts a list of
        module names, along with the following options:</para>
        
        <itemizedlist>
            <listitem>
                <para><literal>-out</literal> specifies the output module 
                repository (which must be a local module repository).</para>
            </listitem>
            <listitem>
                <para><literal>-src</literal> specifies a source
                directory.</para>
            </listitem>
            <listitem>
                <para><literal>-rep</literal> specifies a module
                repository containing source archives.</para>
            </listitem>
            <listitem>
                <para><literal>-d</literal> disables the default
                module repositories and source directory.</para>
            </listitem>
        </itemizedlist>
        
        <para>The default module repositories are <literal>modules</literal>
        and <literal>http://modules.ceylon.org</literal>,
        and the default source directory is <literal>source</literal>.
        The default output module repository is <literal>modules</literal>.</para>
        
        <programlisting>ceylond org.hibernate \
        -src ~/projects/hibernate/src \
        -out ~/projects/hibernate/build</programlisting>
        
        <para>The documentation compiler searches for compilation units 
        belonging to the specified modules in the specified source directories
        and in source archives in the specified module repositories. 
        For each specified module, the compiler generates a set of XHTML pages
        in the module documentation directory (the <literal>module-doc</literal> 
        directory) of the specified output module repository.</para>
        
        <para>The compiler searches for source in the following locations:</para>
        
        <itemizedlist>
            <listitem>
                <para>source archives in the specified repositories, 
                and</para>
            </listitem>
            <listitem>
                <para>module directories in the specified source 
                directories.</para>
            </listitem>
        </itemizedlist>
                
    </section>
    
    <section>
        <title>The repository replicator</title>
        
        <para>The repository replicator copies modules from one repository
        to another.</para>
        
        <para>The <literal>ceylonr</literal> command accepts a list of 
        module names, along with the following options:</para>
        
        <itemizedlist>
            <listitem>
                <para><literal>-out</literal> specifies the output module 
                repository (which must be a local module repository or
                a remote module repository which supports the standard 
                module submission interface).</para>
            </listitem>
            <listitem>
                <para><literal>-rep</literal> specifies a module
                repository containing source archives.</para>
            </listitem>
            <listitem>
                <para><literal>-d</literal> disables the default
                module repositories.</para>
            </listitem>
            <listitem>
                <para><literal>-nosrc</literal> disables replication of
                source archives.</para>
            </listitem>
            <listitem>
                <para><literal>-nodoc</literal> disables replication of
                module documentation directories.</para>
            </listitem>
        </itemizedlist>
        
        <para>The default module repositories are <literal>modules</literal>
        and <literal>http://modules.ceylon.org</literal>. The default output
        module repository is <literal>modules</literal>.</para>
        
        <programlisting>ceylonr org.hibernate org.hibernate.test org.hibernate.examples \
        -rep http://jboss.org/ceylon/modules</programlisting>
        
        <para>The repository replicator searches for directories containing
        the specified modules in the specified module repositories and, if 
        found, replicates their contents into the specified output module 
        repository.</para>
        
    </section>
    
    <section>
        <title>The source archive extractor</title>
        
        <para>The source archive extractor fetches source archives and 
        extracts their contents into a source directory. This is
        especially useful for working with example projects.</para>
        
        <para>The <literal>ceylonf</literal> command accepts a list of
        module names, along with the following options:</para>
        
        <itemizedlist>
            <listitem>
                <para><literal>-src</literal> specifies the output source
                directory.</para>
            </listitem>
            <listitem>
                <para><literal>-rep</literal> specifies a module
                repository containing source archives.</para>
            </listitem>
            <listitem>
                <para><literal>-d</literal> disables the default
                module repositories.</para>
            </listitem>
        </itemizedlist>
        
        <para>The default module repositories are <literal>modules</literal>
        and <literal>http://modules.ceylon.org</literal>. The default output 
        source directory is <literal>source</literal>.</para>
        
        <programlisting>ceylonf org.hibernate.examples \
        -rep http://jboss.org/ceylon/modules \
        -src ~/projects/hibernate/src</programlisting>
        
        <para>The source archive extractor searches for source archives for
        the specified modules in the specified module repositories and, if
        found, extracts their contents into the specified source directory.</para>
        
    </section>

</chapter>