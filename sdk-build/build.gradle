plugins {
    id 'de.qaware.seu.as.code.git' version '2.2.0'
}

apply plugin : LifecycleBasePlugin

configurations {
    antBuildEnv
}

repositories {
    // TODO: Still refering back to lib directory, because the lib cannot be foudn on the 'net.
    flatDir {
        dirs "${rootProject.projectDir}/lib"
    }
}

dependencies {
    antBuildEnv antContribDep
    antBuildEnv antlrDep
    antBuildEnv osgiBndDep
    antBuildEnv osgiBndAntDep
    antBuildEnv osgiBindexDep
}

ext {
    githubOrgOrUser = project.properties.ceylonGitHubOrgOrUser ?: 'ceylon'
    githubRepoName = 'ceylon-sdk'
    localRepoFolder   = file("${buildDir}/${githubRepoName}")
    localRepoBuildDir = file("${buildDir}/build-${githubRepoName}")
    localRepoMainDir  = file("${localRepoBuildDir}/main")
    localRepoExists   = file("${localRepoFolder}/.git").exists()
    localRepoDistDir  = file("${localRepoMainDir}/dist/dist")
}

git {
    sdk {
        url "https://github.com/${githubOrgOrUser}/${githubRepoName}.git"
        directory localRepoFolder
        branch 'HEAD'
//        username gitUsername
//        password gitPassword
        singleBranch false
    }
}

task setup {
    group "Git Lifecycle"
    description "Clones a new repo for ${githubRepoName}"
    dependsOn 'gitCloneSdk'
}

task update {
    group "Git Lifecycle"
    description "Updated ${githubRepoName} to latest version"
    dependsOn localRepoExists ? 'gitPullSdk' : 'gitCloneSdk'
}

task status {
    group "Git Lifecycle"
    description "Shows git status for ${githubRepoName}"
    dependsOn 'gitStatusSdk'
    enabled = localRepoExists
}


// TODO: task setup-admins

clean {
    delete = []
    delete localRepoBuildDir
}

task createAntBuildEnvironment( type : Copy ) {
    into localRepoMainDir

    from configurations.antBuildEnv, {
        into 'lib'
    }

    from distDir, {
        into 'dist/dist'
    }

    dependsOn ':dist:publishInternal'
}

task invokeAntBuild( type : GradleBuild ) {
    dir = localRepoFolder
    buildFile = file('ant.gradle')
    tasks = ['antPublish']
    startParameter.projectProperties+= [
        ceylonBuildDir : localRepoBuildDir,
        ceylonMainDir  : localRepoMainDir,
        ceylonAntJar   : "${repoLibDir}/ceylon-ant.jar",
        antProjectDir  : localRepoFolder
    ]

    mustRunAfter update, setup

    if(!localRepoExists) {
        dependsOn setup
    }

    dependsOn createAntBuildEnvironment
}

build {
    dependsOn invokeAntBuild
}

task publishInternal {
    dependsOn build
}