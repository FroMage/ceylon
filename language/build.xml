<!--
   To build the reference docs for a particular language only, use "ant -Dlang=en", for
   example, and call either lang.all, lang.docpdf, lang.dochtml, or lang.dochtmlsingle
   for the target of your choice.

   You can also call lang.section-check to track down missing identifiers in a particular
   language, or you can call lang.revdiff to get a difference report for a particular
   language, compared with the English reference.
-->
<project name="Ceylon Language module" default="publish" basedir=".">
    <property file="build.properties"/>

    <!-- Set build directories for all formats. -->
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.classes" location="${build.dir}/classes"/>
    <property name="build.lib" location="${build.dir}/lib"/>

    <!-- The Java and Ceylon source files for the runtime -->
    <property name="runtime.src" location="runtime"/> 

    <!-- jar generated -->
    <property name="runtime.jar" location="${build.lib}/runtime.jar"/>

    <tstamp/>

    <!-- Local repository -->
    <property name="repo.local.dir" value="${user.home}/.ceylon/repo"/>

    <!-- ceylon.language -->
    <property name="module.language.srcrootdir" value="${basedir}/languagesrc/current"/>
    <property name="module.language.dir" value="ceylon/language"/>
    <property name="module.language.name" value="ceylon.language"/>
    <property name="module.language.javasrcdir" value="${basedir}/runtime"/>

    <!-- ################################################################## -->

	  <!-- Rule to clean everything up -->
    <target name="clean" description="Clean up everything.">
        <delete dir="${build}"/>
	</target>

    <!-- Repository targets -->
    <target name="init.repo"
            description="Init local ceylon repository and add ceylon.language">
        <mkdir dir="${repo.local.dir}"/>
    </target>

    <target name="publish"
            depends="init.repo,build"
            description="Publish Ceylon language template">
        <property name="dir.file" value="${repo.local.dir}/${module.language.dir}/${module.ceylon.language.version}"/>
        <property name="src.file" value="${dir.file}/${module.language.name}-${module.ceylon.language.version}.src"/>
        <property name="car.file" value="${dir.file}/${module.language.name}-${module.ceylon.language.version}.car"/>

        <delete dir="${dir.file}"/>
        <mkdir dir="${dir.file}"/>
        <zip destfile="${src.file}">
            <fileset dir="${module.language.srcrootdir}">
                <include name="ceylon/language/**/*.ceylon"/>
            </fileset>
            <fileset dir="${module.language.javasrcdir}">
                <include name="**/*.java"/>
            </fileset>
            
        </zip>
        <checksum file="${src.file}" algorithm="sha1"/>
        <copy file="${runtime.jar}" tofile="${car.file}"/>
        <checksum file="${car.file}" algorithm="sha1"/>
    </target>

    <target name="clean.repo"
            description="Clean local ceylon repository">
        <delete dir="${repo.local.dir}"/>
    </target>

    <!-- Tasks related to building the runtime -->
    <!-- Rule to build runtime classes from their Java and Ceylon sources -->
    <target name="runtime.classes" >
<!--
    depends="compiler.jar">
    <taskdef name="ceylonc" classname="com.redhat.ceylon.compiler.ant.Ceylonc">
      <classpath>
        <pathelement location="${compiler.jar}"/>
      </classpath>
    </taskdef>
    <ceylonc
       compiler="bin/ceylonc"
       srcdir="${runtime.src}"
       destdir="${build.classes}"/>
-->
        <mkdir dir="${build.classes}"/>
        <javac
            srcdir="${runtime.src}"
            destdir="${build.classes}"/>
    </target>

    <!-- Rule to build runtime jar -->
    <target name="runtime.jar" depends="runtime.classes">
        <mkdir dir="${build.lib}"/>
        <jar destfile="${runtime.jar}">
            <fileset dir="${build.classes}">
                <include name="ceylon/**"/>
                <include name="com/redhat/ceylon/compiler/metadata/**"/>
            </fileset>
        </jar>
    </target>

    <!-- Rule to compile and test -->
    <target name="build" depends="runtime.jar"/>

</project>
