plugins {
    id "com.athaydes.ceylon" version "1.2.0"
}

dependencies {
    compile project(':common')
    compile project(':model')
}

ext {
    templateSrcDir = file('template/com/redhat/ceylon/compiler/java/language')
    generatedSrcDir = file('runtime2/com/redhat/ceylon/compiler/java/language')

    // Probably should get these from elsewhere
    buildDistRepo = file("${buildDir}/dist/repo")


}

apply from : 'generate-source.gradle'


configurations {
    ceylonAntCompiler fileTree( )
}

task ceylonCompile (type : AntCeylonCompilerTask) {
//    classpath
}




//task generateJavaShortArray( type : Copy ) {
//    group 'Code generation'
//    description 'Generates ShortArray'
//    from  "${templateSrcDir}/PrimitiveArray.java"
//    into generatedSrcDir
//    rename ~/.+/,'ShortArray.java'
//
//    filter ReplaceTokens, tokens : [
//            Name : 'Short',
//            Classname : 'ShortArray',
//
//            PrimitiveType : 'short',
//
//            BoxedType : 'ceylon.language.Integer',
//            BoxedTypeName : 'ceylon.language::Integer',
//            UnboxMethod : 'longValue',
//
//            JavaBoxedType : 'java.lang.Short',
//            JavaBoxedTypeName : 'java.lang::Short',
//
//            GeneratedWarning : 'THIS IS A GENERATED FILE - DO NOT EDIT',
//            OptionalStart : '/*',
//            OptionalEnd : '*/',
//            Optional : '//',
//            ArrayInstanceWrapper : 'NOTUSED',
//            CeylonArrayGetter : 'NOTUSED'
//
//    ]
//}




//ant.importBuild('build.xml') { antTargetName ->
//    'ant-' + antTargetName
//}
//
//ant.properties['build.dir'] = buildDir
//
//// We're not building ourselves but delegating to Ant
//assemble.dependsOn = ['ant-build']
//clean.dependsOn = ['ant-clean']



/*
Build tasks
-----------
assemble - Assembles the outputs of this project.
    ant-build
    ant-ceylon.language.java
    ant-ceylon.language.js
    ant-generate.sources.java
build - Assembles and tests this project. [assemble, check]
buildDependents - Assembles and tests this project and all projects that depend on it. [build]
buildNeeded - Assembles and tests this project and all projects it depends on. [build, :common:buildNeeded, :model:buildNeeded]
classes - Assembles main classes. [:common:jar, :langtools-classfile:jar, :model:jar]
    compileJava - Compiles main Java source.
    processResources - Processes main resources.
clean - Deletes the build directory.
    ant-clean - Clean up everything
jar - Assembles a jar archive containing the main classes. [classes]
testClasses - Assembles test classes. [classes, :common:jar, :langtools-classfile:jar, :model:jar]
    compileTestJava - Compiles test Java source.
    processTestResources - Processes test resources.

Documentation tasks
-------------------
javadoc - Generates Javadoc API documentation for the main source code. [classes, :common:jar, :common:javadoc, :langtools-classfile:jar, :model:jar, :model:javadoc]

Help tasks
----------
buildEnvironment - Displays all buildscript dependencies declared in project ':language'.
components - Displays the components produced by project ':language'. [incubating]
dependencies - Displays all dependencies declared in project ':language'.
dependencyInsight - Displays the insight into a specific dependency in project ':language'.
help - Displays a help message.
model - Displays the configuration model of project ':language'. [incubating]
projects - Displays the sub-projects of project ':language'.
properties - Displays the properties of project ':language'.
tasks - Displays the tasks runnable from project ':language'.

Verification tasks
------------------
check - Runs all checks. [test]
test - Runs the unit tests. [classes, testClasses, :common:jar, :langtools-classfile:jar, :model:jar]

Other tasks
-----------
ant-bundle-proxy
ant-doc
    ant-ceylon.language.doc
ant-ide-quick-internal
ant-publish - Publish Ceylon language module to default repo
    ant-build
    ant-ceylon.language.java
    ant-ceylon.language.js
    ant-clean.repo - Clean default local Ceylon module repository
    ant-dist - Create Ceylon language distribution
    ant-generate.sources.java
    ant-ide-backup
    ant-init.repo - Create default local Ceylon module repository
    ant-publish-internal
ant-sha1sum
ant-test - compile and run the tests for JVM and Node.js (requires node)
    ant-build
    ant-ceylon.language.java
    ant-ceylon.language.js
    ant-compile.tests.java
    ant-compile.tests.java.quick
    ant-compile.tests.js
    ant-compile.tests.js.quick
    ant-compile.tests.setup
    ant-generate.sources.java
    ant-test.java
    ant-test.java.quick - compile and run the JVM tests
    ant-test.js
    ant-test.js.quick - compile and run the Node.js tests (requires node)
ant-test-quick - compile and run the tests for JVM and Node.js (requires node)
    ant-compile.tests.java.quick
    ant-compile.tests.js.quick
    ant-compile.tests.setup
    ant-test.java.quick - compile and run the JVM tests
    ant-test.js.quick - compile and run the Node.js tests (requires node)
 */