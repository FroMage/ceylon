<?xml version="1.0" encoding="UTF-8"?>
<project name="ceylon-dist" default="help" basedir=".">

    <property file="build.properties"/>
    <property name="projects.dir" value="${basedir}/projects"/>
    <property name="dist.name" value="ceylon-${ceylon.version}"/>
    <property name="dist.dir" value="${basedir}/dist"/>

    <target name="help">
        <echo>Options for building a Ceylon distribution package:
    ant get-code           - Downloads latest code for all projects
    ant checkout -Dtag=0.3 - Makes sure we're using the specified tag, or
    ant checkout-master    - To make sure we're using master
    ant local package      - Builds the distribution package

    ant siblings package   - Builds the distribution package using
                             existing sibling project folders
                             (leaves sources untouched!)

    ant clean              - Cleans the distribution package
    ant clean-all          - Cleans the distribution package
                             and deletes all local projects

A typical release build command would normally look like this:
    ant clean get-code checkout -Dtag=0.3 local package</echo>
    </target>

    <target name="local">
        <property name="projects.base.dir" value="${projects.dir}"/>
        <property name="ceylon-compiler.dir" value="${projects.base.dir}/ceylon-compiler"/>
        <property name="ceylon-spec.dir" value="${projects.base.dir}/ceylon-spec"/>
        <property name="ceylon.language.dir" value="${projects.base.dir}/ceylon.language"/>
        <property name="ceylon-module-resolver.dir" value="${projects.base.dir}/ceylon-module-resolver"/>
        <property name="ceylon-runtime.dir" value="${projects.base.dir}/ceylon-runtime"/>
        <property name="ceylon-js.dir" value="${projects.base.dir}/ceylon-js"/>
    </target>

    <target name="siblings">
        <property name="projects.base.dir" value="${basedir}/.." />
        <property name="ceylon-compiler.dir" value="${projects.base.dir}/ceylon-compiler"/>
        <property name="ceylon-spec.dir" value="${projects.base.dir}/ceylon-spec"/>
        <property name="ceylon.language.dir" value="${projects.base.dir}/ceylon.language"/>
        <property name="ceylon-module-resolver.dir" value="${projects.base.dir}/ceylon-module-resolver"/>
        <property name="ceylon-runtime.dir" value="${projects.base.dir}/ceylon-runtime"/>
        <property name="ceylon-js.dir" value="${projects.base.dir}/ceylon-js"/>
    </target>

    <target name="package" depends="install-compiler, install-js, copy-compiler-binaries, copy-samples, copy-compiler-libraries, install-typechecker, install-language, install-runtime, generate-spec, generate-apidoc">
        <zip destfile="${basedir}/${dist.name}.zip">
            <zipfileset dir="${dist.dir}" prefix="${dist.name}">
                <include name="bin/**" />
                <exclude name="bin/ceylon*" />
            </zipfileset>
            <zipfileset dir="${dist.dir}" filemode="755"  prefix="${dist.name}">
                <include name="bin/ceylon*" />
            </zipfileset>
            <zipfileset dir="${dist.dir}" prefix="${dist.name}">
                <include name="doc/**" />
                <include name="lib/**" />
                <include name="repo/**" />
                <include name="runtime-repo/**" />
                <include name="samples/**" />
            </zipfileset>
            <zipfileset dir="${basedir}" prefix="${dist.name}">
                <include name="LICENSE-ASL" />
                <include name="LICENSE-GPL-CP" />
                <include name="NOTICE" />
                <include name="README.md" />
                <include name="README-ANT.md" />
            </zipfileset>
        </zip>        
    </target>

    <target name="copy-compiler-binaries">
        <mkdir dir="${dist.dir}/bin"/>
        <copy todir="${dist.dir}/bin">
            <fileset dir="${ceylon-compiler.dir}/build/bin">
                <include name="args.sh"/>
                <include name="args.bat"/>
                <include name="java.bat"/>
                <include name="ceylonc"/>
                <include name="ceylonc.bat"/>
                <include name="ceylond"/>
                <include name="ceylond.bat"/>
                <include name="ceylon-import-jar"/>
                <include name="ceylon-import-jar.bat"/>
            </fileset>
            <fileset dir="${ceylon-js.dir}/build/bin">
                <include name="ceylonc-js"/>
                <include name="ceylonc-js.bat"/>
                <include name="ceylon-js"/>
                <include name="ceylon-js.bat"/>
                <include name="c-js.sh" />
                <include name="c-js.bat" />
            </fileset>
        </copy>
        <chmod perm="0755">
            <fileset dir="${dist.dir}/bin">
                <include name="ceylonc"/>
                <include name="ceylond"/>
                <include name="ceylon-import-jar"/>
                <include name="ceylon-js"/>
                <include name="ceylonc-js"/>
            </fileset>
        </chmod>
    </target>

    <target name="copy-compiler-libraries">
        <mkdir dir="${dist.dir}/lib"/>
        <copy todir="${dist.dir}/lib">
            <fileset dir="${ceylon-compiler.dir}/build/lib">
                <include name="antlr-*-complete.jar"/>
                <include name="markdownj-*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="copy-samples">
        <mkdir dir="${dist.dir}/samples"/>
        <copy todir="${dist.dir}/samples">
            <fileset dir="samples">
                <include name="helloworld/**"/>
                <include name="no-module/**"/>
                <include name="interop-java/**"/>
            </fileset>
        </copy>
    </target>

    <target name="install-compiler">
        <ant antfile="${ceylon-compiler.dir}/build.xml" target="clean" dir="${ceylon-compiler.dir}" inheritall="false"/>
        <ant antfile="${ceylon-compiler.dir}/build.xml" target="dist" dir="${ceylon-compiler.dir}" inheritall="false"/>
        <copy todir="${dist.dir}/repo">
            <fileset dir="${ceylon-compiler.dir}/build/dist">
            </fileset>
        </copy>
    </target>

    <target name="install-js">
        <ant antfile="${ceylon-js.dir}/build.xml" target="clean" dir="${ceylon-js.dir}" inheritall="false"/>
        <ant antfile="${ceylon-js.dir}/build.xml" target="dist" dir="${ceylon-js.dir}" inheritall="false"/>
        <copy todir="${dist.dir}/repo">
            <fileset dir="${ceylon-js.dir}/build/dist">
            </fileset>
            <fileset dir="${ceylon-js.dir}/build/runtime">
            </fileset>
        </copy>
    </target>

    <target name="install-typechecker">
        <ant antfile="${ceylon-spec.dir}/build.xml" target="clean" dir="${ceylon-spec.dir}" inheritall="false"/>
        <ant antfile="${ceylon-spec.dir}/build.xml" target="dist" dir="${ceylon-spec.dir}" inheritall="false"/>
        <copy todir="${dist.dir}/repo">
            <fileset dir="${ceylon-spec.dir}/build/dist">
            </fileset>
        </copy>
    </target>

    <target name="install-language">
        <ant antfile="${ceylon.language.dir}/build.xml" target="clean" dir="${ceylon.language.dir}" inheritall="false"/>
        <ant antfile="${ceylon.language.dir}/build.xml" target="dist" dir="${ceylon.language.dir}" inheritall="false"/>
    	<!-- runtime requires it to be installed -->
        <ant antfile="${ceylon.language.dir}/build.xml" target="publish" dir="${ceylon.language.dir}" inheritall="false"/>
        <copy todir="${dist.dir}/repo">
            <fileset dir="${ceylon.language.dir}/build/dist">
            </fileset>
        </copy>
    </target>

    <target name="compile-module-resolver">
        <ant antfile="${ceylon-module-resolver.dir}/build.xml" target="clean" dir="${ceylon-module-resolver.dir}" inheritall="false"/>
        <ant antfile="${ceylon-module-resolver.dir}/build.xml" target="dist" dir="${ceylon-module-resolver.dir}" inheritall="false"/>
        <!-- runtime requires it to be installed -->
        <ant antfile="${ceylon-module-resolver.dir}/build.xml" target="publish" dir="${ceylon-module-resolver.dir}" inheritall="false"/>
        <copy todir="${dist.dir}/repo">
            <fileset dir="${ceylon-module-resolver.dir}/build/dist">
            </fileset>
        </copy>
        <copy todir="${dist.dir}/lib">
            <fileset dir="${ceylon-module-resolver.dir}/lib">
                <include name="sardine-*.jar"/>
                <include name="httpclient-*.jar"/>
                <include name="httpcore-*.jar"/>
                <include name="commons-logging-*.jar"/>
                <include name="commons-codec-*.jar"/>
                <include name="slf4j-*.jar"/>
                <include name="jandex-*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="install-runtime" depends="compile-module-resolver">
        <ant antfile="${ceylon-runtime.dir}/build.xml" target="clean" dir="${ceylon-runtime.dir}" inheritall="false"/>
        <ant antfile="${ceylon-runtime.dir}/build.xml" target="dist" dir="${ceylon-runtime.dir}" inheritall="false"/>
        <copy todir="${dist.dir}">
            <fileset dir="${ceylon-runtime.dir}/build/dist">
            </fileset>
        </copy>
        <chmod perm="0755">
            <fileset dir="${dist.dir}/bin">
                <include name="ceylon"/>
            </fileset>
        </chmod>
    </target>

    <target name="generate-spec">
        <ant antfile="${ceylon-spec.dir}/build.xml" target="doc" dir="${ceylon-spec.dir}" inheritall="false"/>
        <copy todir="${dist.dir}/doc">
            <fileset dir="${ceylon-spec.dir}/build">
                <exclude name="dist,classes"/>
            </fileset>
        </copy>
    </target>

    <target name="generate-apidoc">
        <exec executable="${dist.dir}/bin/ceylond" failonerror="yes">
            <arg value="-out"/>
            <arg value="${dist.dir}/repo"/>
            <arg value="-src"/>
            <arg value="${ceylon.language.dir}/src/"/>
            <arg value="-source-code"/>
            <arg value="ceylon.language"/>
        </exec>
    </target>

    <target name="get-code" depends="use-git-pull,use-git-clone">
        <echo>
If you are building a distribution package for a specific tagged release
then execute the following command:

    ant checkout -Dtag=0.3 - Makes sure we're using the specified tag

or you can go straight to the package building:

    ant local package      - Builds the distribution package
</echo>
    </target>

    <target name="check-exists-projects-dir">
        <available property="projects.dir.exists" file="${projects.dir}" type="dir" />
    </target>

    <target name="use-git-clone" depends="check-exists-projects-dir" unless="${projects.dir.exists}">
        <antcall target="git-clone" />
    </target>
    <target name="git-clone">
        <mkdir dir="${projects.dir}"/>
        <exec executable="git" dir="${projects.dir}" failonerror="yes">
            <arg value="clone"/>
            <arg value="https://github.com/ceylon/ceylon-compiler.git"/>
        </exec>
        <exec executable="git" dir="${projects.dir}" failonerror="yes">
            <arg value="clone"/>
            <arg value="https://github.com/ceylon/ceylon-spec.git"/>
        </exec>
        <exec executable="git" dir="${projects.dir}" failonerror="yes">
            <arg value="clone"/>
            <arg value="https://github.com/ceylon/ceylon.language.git"/>
        </exec>
        <exec executable="git" dir="${projects.dir}" failonerror="yes">
            <arg value="clone"/>
            <arg value="https://github.com/ceylon/ceylon-module-resolver.git"/>
        </exec>
        <exec executable="git" dir="${projects.dir}" failonerror="yes">
            <arg value="clone"/>
            <arg value="https://github.com/ceylon/ceylon-runtime.git"/>
        </exec>
        <exec executable="git" dir="${projects.dir}" failonerror="yes">
            <arg value="clone"/>
            <arg value="https://github.com/ceylon/ceylon-js.git"/>
        </exec>
    </target>

    <target name="use-git-pull" depends="check-exists-projects-dir" if="${projects.dir.exists}">
        <antcall target="git-pull" />
    </target>
    <target name="git-pull" depends="checkout-master">
        <exec executable="git" dir="${projects.dir}/ceylon-compiler" failonerror="yes">
            <arg value="pull"/>
            <arg value="--ff-only"/>
        </exec>
        <exec executable="git" dir="${projects.dir}/ceylon-spec" failonerror="yes">
            <arg value="pull"/>
            <arg value="--ff-only"/>
        </exec>
        <exec executable="git" dir="${projects.dir}/ceylon.language" failonerror="yes">
            <arg value="pull"/>
            <arg value="--ff-only"/>
        </exec>
        <exec executable="git" dir="${projects.dir}/ceylon-module-resolver" failonerror="yes">
            <arg value="pull"/>
            <arg value="--ff-only"/>
        </exec>
        <exec executable="git" dir="${projects.dir}/ceylon-runtime" failonerror="yes">
            <arg value="pull"/>
            <arg value="--ff-only"/>
        </exec>
        <exec executable="git" dir="${projects.dir}/ceylon-js" failonerror="yes">
            <arg value="pull"/>
            <arg value="--ff-only"/>
        </exec>
    </target>

    <target name="checkout">
        <fail unless="tag" />
        <antcall target="checkout-internal">
            <param name="tag-internal" value="${tag}" />
        </antcall>
        <echo>
You can now build the package by executing:

    ant local package      - Builds the distribution package
</echo>
    </target>

    <target name="checkout-internal">
        <fail unless="tag-internal" />
        <exec executable="git" dir="${projects.dir}/ceylon-compiler" failonerror="yes">
            <arg value="checkout"/>
            <arg value="-q"/>
            <arg value="${tag-internal}"/>
        </exec>
        <exec executable="git" dir="${projects.dir}/ceylon-spec" failonerror="yes">
            <arg value="checkout"/>
            <arg value="-q"/>
            <arg value="${tag-internal}"/>
        </exec>
        <exec executable="git" dir="${projects.dir}/ceylon.language" failonerror="yes">
            <arg value="checkout"/>
            <arg value="-q"/>
            <arg value="${tag-internal}"/>
        </exec>
        <exec executable="git" dir="${projects.dir}/ceylon-module-resolver" failonerror="yes">
            <arg value="checkout"/>
            <arg value="-q"/>
            <arg value="${tag-internal}"/>
        </exec>
        <exec executable="git" dir="${projects.dir}/ceylon-runtime" failonerror="yes">
            <arg value="checkout"/>
            <arg value="-q"/>
            <arg value="${tag-internal}"/>
        </exec>
        <exec executable="git" dir="${projects.dir}/ceylon-js" failonerror="yes">
            <arg value="checkout"/>
            <arg value="-q"/>
            <arg value="${tag-internal}"/>
        </exec>
    </target>

    <target name="checkout-master">
        <antcall target="checkout-internal">
            <param name="tag-internal" value="master" />
        </antcall>
    </target>

    <target name="clean">
        <delete dir="${dist.dir}"/>
    </target>

    <target name="clean-all" depends="clean">
        <delete dir="${projects.dir}"/>
    </target>
</project>
